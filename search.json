[{"path":"https://calvagone.github.io/campsismod.doc/articles/campsismod.html","id":"load-example-from-model-library","dir":"Articles","previous_headings":"","what":"Load example from model library","title":"Get started with CAMPSIS model","text":"First import campsismod package. step required already loaded campsis package. Load 2-compartment PK model built-model library show content.","code":"library(campsismod) model <- model_library$advan4_trans4 show(model) ## [MAIN] ## KA=THETA_KA*exp(ETA_KA) ## CL=THETA_CL*exp(ETA_CL) ## V2=THETA_V2*exp(ETA_V2) ## V3=THETA_V3*exp(ETA_V3) ## Q=THETA_Q*exp(ETA_Q) ## S2=V2 ##  ## [ODE] ## d/dt(A_DEPOT)=-KA*A_DEPOT ## d/dt(A_CENTRAL)=KA*A_DEPOT + Q*A_PERIPHERAL/V3 + (-CL/V2 - Q/V2)*A_CENTRAL ## d/dt(A_PERIPHERAL)=-Q*A_PERIPHERAL/V3 + Q*A_CENTRAL/V2 ## d/dt(A_OUTPUT)=CL*A_CENTRAL/V2 ## F=A_CENTRAL/S2 ##  ## [ERROR] ## CP=F ## OBS_CP=CP*(EPS_PROP + 1) ## Y=OBS_CP ##  ##  ## THETA's: ##   name index value   fix ## 1   KA     1     1 FALSE ## 2   CL     2     5 FALSE ## 3   V2     3    80 FALSE ## 4   V3     4    20 FALSE ## 5    Q     5     4 FALSE ## OMEGA's: ##   name index index2 value   fix type same ## 1   KA     1      1 0.025 FALSE  var   NA ## 2   CL     2      2 0.025 FALSE  var   NA ## 3   V2     3      3 0.025 FALSE  var   NA ## 4   V3     4      4 0.025 FALSE  var   NA ## 5    Q     5      5 0.025 FALSE  var   NA ## SIGMA's: ##   name index index2 value   fix type ## 1 PROP     1      1 0.025 FALSE  var ## No variance-covariance matrix ##  ## Compartments: ## A_DEPOT (CMT=1) ## A_CENTRAL (CMT=2) ## A_PERIPHERAL (CMT=3) ## A_OUTPUT (CMT=4)"},{"path":"https://calvagone.github.io/campsismod.doc/articles/campsismod.html","id":"write-campsis-model","dir":"Articles","previous_headings":"","what":"Write CAMPSIS model","title":"Get started with CAMPSIS model","text":"CAMPSIS model can persisted local drive follows: shown, output directory contain model (code records) 1 csv file per type parameter (THETA, OMEGA SIGMA).","code":"model %>% write(file=\"path_to_model_folder\") ## [1] TRUE list.files(\"path_to_model_folder\") ## [1] \"model.campsis\" \"omega.csv\"     \"sigma.csv\"     \"theta.csv\""},{"path":"https://calvagone.github.io/campsismod.doc/articles/campsismod.html","id":"read-campsis-model","dir":"Articles","previous_headings":"","what":"Read CAMPSIS model","title":"Get started with CAMPSIS model","text":"read CAMPSIS model local drive, use read.campsis function. exact model retrieved. MAIN record part model model parameters defined. ODE record ordinary differential equations (ODE) go, well equation depending simulation time. ERROR record place error model defined. model parameters shown, followed compartments.","code":"model <- read.campsis(file=\"path_to_model_folder\") show(model) ## [MAIN] ## KA=THETA_KA*exp(ETA_KA) ## CL=THETA_CL*exp(ETA_CL) ## V2=THETA_V2*exp(ETA_V2) ## V3=THETA_V3*exp(ETA_V3) ## Q=THETA_Q*exp(ETA_Q) ## S2=V2 ##  ## [ODE] ## d/dt(A_DEPOT)=-KA*A_DEPOT ## d/dt(A_CENTRAL)=KA*A_DEPOT + Q*A_PERIPHERAL/V3 + (-CL/V2 - Q/V2)*A_CENTRAL ## d/dt(A_PERIPHERAL)=-Q*A_PERIPHERAL/V3 + Q*A_CENTRAL/V2 ## d/dt(A_OUTPUT)=CL*A_CENTRAL/V2 ## F=A_CENTRAL/S2 ##  ## [ERROR] ## CP=F ## OBS_CP=CP*(EPS_PROP + 1) ## Y=OBS_CP ##  ##  ## THETA's: ##   name index value   fix ## 1   KA     1     1 FALSE ## 2   CL     2     5 FALSE ## 3   V2     3    80 FALSE ## 4   V3     4    20 FALSE ## 5    Q     5     4 FALSE ## OMEGA's: ##   name index index2 value   fix type same ## 1   KA     1      1 0.025 FALSE  var   NA ## 2   CL     2      2 0.025 FALSE  var   NA ## 3   V2     3      3 0.025 FALSE  var   NA ## 4   V3     4      4 0.025 FALSE  var   NA ## 5    Q     5      5 0.025 FALSE  var   NA ## SIGMA's: ##   name index index2 value   fix type ## 1 PROP     1      1 0.025 FALSE  var ## No variance-covariance matrix ##  ## Compartments: ## A_DEPOT (CMT=1) ## A_CENTRAL (CMT=2) ## A_PERIPHERAL (CMT=3) ## A_OUTPUT (CMT=4)"},{"path":"https://calvagone.github.io/campsismod.doc/articles/campsismod.html","id":"export-campsis-model-to-rxode","dir":"Articles","previous_headings":"","what":"Export CAMPSIS model to RxODE","title":"Get started with CAMPSIS model","text":"campsismod powerful export capabilities RxODE mrgsolve, 2 simulation engines supported campsis. following code exports model RxODE. Please note step implicit CAMPSIS call simulate method preferred simulation engine.","code":"rxmod <- model %>% export(dest=\"RxODE\") rxmod ## An object of class \"rxode_model\" ## Slot \"code\": ##  [1] \"KA=THETA_KA*exp(ETA_KA)\"                                                    ##  [2] \"CL=THETA_CL*exp(ETA_CL)\"                                                    ##  [3] \"V2=THETA_V2*exp(ETA_V2)\"                                                    ##  [4] \"V3=THETA_V3*exp(ETA_V3)\"                                                    ##  [5] \"Q=THETA_Q*exp(ETA_Q)\"                                                       ##  [6] \"S2=V2\"                                                                      ##  [7] \"d/dt(A_DEPOT)=-KA*A_DEPOT\"                                                  ##  [8] \"d/dt(A_CENTRAL)=KA*A_DEPOT + Q*A_PERIPHERAL/V3 + (-CL/V2 - Q/V2)*A_CENTRAL\" ##  [9] \"d/dt(A_PERIPHERAL)=-Q*A_PERIPHERAL/V3 + Q*A_CENTRAL/V2\"                     ## [10] \"d/dt(A_OUTPUT)=CL*A_CENTRAL/V2\"                                             ## [11] \"F=A_CENTRAL/S2\"                                                             ## [12] \"CP=F\"                                                                       ## [13] \"OBS_CP=CP*(EPS_PROP + 1)\"                                                   ## [14] \"Y=OBS_CP\"                                                                   ##  ## Slot \"theta\": ## THETA_KA THETA_CL THETA_V2 THETA_V3  THETA_Q  ##        1        5       80       20        4  ##  ## Slot \"omega\": ##        ETA_KA ETA_CL ETA_V2 ETA_V3 ETA_Q ## ETA_KA  0.025  0.000  0.000  0.000 0.000 ## ETA_CL  0.000  0.025  0.000  0.000 0.000 ## ETA_V2  0.000  0.000  0.025  0.000 0.000 ## ETA_V3  0.000  0.000  0.000  0.025 0.000 ## ETA_Q   0.000  0.000  0.000  0.000 0.025 ##  ## Slot \"sigma\": ##          EPS_PROP ## EPS_PROP    0.025"},{"path":"https://calvagone.github.io/campsismod.doc/articles/campsismod.html","id":"export-campsis-model-to-mrgsolve","dir":"Articles","previous_headings":"","what":"Export CAMPSIS model to mrgsolve","title":"Get started with CAMPSIS model","text":"following code exports model mrgsolve (text form).","code":"mrgmod <- model %>% export(dest=\"mrgsolve\") mrgmod ## An object of class \"mrgsolve_model\" ## Slot \"param\": ## [1] \"[PARAM] @annotated\"       \"THETA_KA : 1 : THETA_KA\"  ## [3] \"THETA_CL : 5 : THETA_CL\"  \"THETA_V2 : 80 : THETA_V2\" ## [5] \"THETA_V3 : 20 : THETA_V3\" \"THETA_Q : 4 : THETA_Q\"    ##  ## Slot \"cmt\": ## [1] \"[CMT] @annotated\"          \"A_DEPOT : DEPOT\"           ## [3] \"A_CENTRAL : CENTRAL\"       \"A_PERIPHERAL : PERIPHERAL\" ## [5] \"A_OUTPUT : OUTPUT\"         ##  ## Slot \"main\": ## [1] \"[MAIN]\"                          \"double KA=THETA_KA*exp(ETA_KA);\" ## [3] \"double CL=THETA_CL*exp(ETA_CL);\" \"double V2=THETA_V2*exp(ETA_V2);\" ## [5] \"double V3=THETA_V3*exp(ETA_V3);\" \"double Q=THETA_Q*exp(ETA_Q);\"    ## [7] \"double S2=V2;\"                   ##  ## Slot \"ode\": ## [1] \"[ODE]\"                                                                      ## [2] \"dxdt_A_DEPOT=-KA*A_DEPOT;\"                                                  ## [3] \"dxdt_A_CENTRAL=KA*A_DEPOT + Q*A_PERIPHERAL/V3 + (-CL/V2 - Q/V2)*A_CENTRAL;\" ## [4] \"dxdt_A_PERIPHERAL=-Q*A_PERIPHERAL/V3 + Q*A_CENTRAL/V2;\"                     ## [5] \"dxdt_A_OUTPUT=CL*A_CENTRAL/V2;\"                                             ## [6] \"double F=A_CENTRAL/S2;\"                                                     ##  ## Slot \"omega\": ## [1] \"[OMEGA] @annotated @block\"     \"ETA_KA : 0.025 : ETA_KA\"       ## [3] \"ETA_CL : 0 0.025 : ETA_CL\"     \"ETA_V2 : 0 0 0.025 : ETA_V2\"   ## [5] \"ETA_V3 : 0 0 0 0.025 : ETA_V3\" \"ETA_Q : 0 0 0 0 0.025 : ETA_Q\" ##  ## Slot \"sigma\": ## [1] \"[SIGMA] @annotated @block\"   \"EPS_PROP : 0.025 : EPS_PROP\" ##  ## Slot \"table\": ## [1] \"[TABLE]\"                           \"capture CP=F;\"                     ## [3] \"capture OBS_CP=CP*(EPS_PROP + 1);\" \"capture Y=OBS_CP;\"                 ##  ## Slot \"capture\": ## character(0)"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v01_model_creation.html","id":"prerequisite","dir":"Articles","previous_headings":"","what":"Prerequisite","title":"Create a minimalist model","text":"exercise, ’ll need campsismod package. package can loaded follows:","code":"library(campsismod)"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v01_model_creation.html","id":"create-a-minimalist-model-in-the-notepad-editor","dir":"Articles","previous_headings":"","what":"Create a minimalist model in the Notepad++ editor","title":"Create a minimalist model","text":"Assume simple 1-compartment PK model first-order eliminate rate K. Say parameter typical value log(2)/12≈0.06 (12 elimination half life) 15% CV. Let’s also initiate central compartment 1000. can translated following CAMPSIS model ( download Notepad++ plugin CAMPSIS ): Minimalist model edited Notepad++ Let’s now create theta.csv single parameter K follows: Edition THETA’s Excel finally, let’s also create omega.csv include inter-individual variability K: Edition OMEGA’s Excel model can now loaded campsismod… Let’s simulated model CAMPSIS:","code":"model <- read.campsis(\"resources/minimalist_model/\") ## Warning in read.allparameters(folder = folder): No file 'sigma.csv' could be ## found. library(campsis) dataset <- Dataset(25) %>% add(Observations(seq(0,24,by=0.5))) results <- model %>% simulate(dataset=dataset, seed=1) spaghettiPlot(results, \"A_CENTRAL\")"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v01_model_creation.html","id":"create-the-same-model-programmatically","dir":"Articles","previous_headings":"","what":"Create the same model programmatically","title":"Create a minimalist model","text":"model can created programmatically. First, let’s create empty CAMPSIS model. , let’s define equation model parameter K. can add ordinary differential equation follows: can init central compartment well fly: Finally, let’s define THETA_K ETA_K: model can simulated CAMPSIS well. Powerful, isn’t ?","code":"model <- CampsisModel() model <- model %>% add(Equation(\"K\", \"THETA_K*exp(ETA_K)\")) model <- model %>% add(Ode(\"A_CENTRAL\", \"-K*A_CENTRAL\")) model <- model %>% add(InitialCondition(compartment=1, \"1000\")) model <- model %>% add(Theta(\"K\", value=0.06)) model <- model %>% add(Omega(\"K\", value=15, type=\"cv%\")) library(campsis) dataset <- Dataset(25) %>% add(Observations(seq(0,24,by=0.5))) results <- model %>% simulate(dataset=dataset, seed=2) spaghettiPlot(results, \"A_CENTRAL\")"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v02_structural_model.html","id":"prerequisite","dir":"Articles","previous_headings":"","what":"Prerequisite","title":"Insight on the structural model","text":"examples require package campismod.","code":"library(campsismod)"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v02_structural_model.html","id":"equation","dir":"Articles","previous_headings":"","what":"Equation","title":"Insight on the structural model","text":"Equations described 3 fields: lhs: left-hand side string, corresponds variable name rhs: right-hand side string, corresponds formula comment: possible comment Example: equivalent text form :","code":"equation <- Equation(\"KA\", \"THETA_KA * exp(ETA_KA)\", comment=\"This is my KA parameter\") equation ## KA=THETA_KA * exp(ETA_KA) # This is my KA parameter"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v02_structural_model.html","id":"ordinary-differential-equation-ode","dir":"Articles","previous_headings":"","what":"Ordinary differential equation (ODE)","title":"Insight on the structural model","text":"Similarly, Ordinary differential equations (ODE’s) described 3 fields well: lhs: left-hand side string, corresponds variable name, must start ‘A_’ rhs: right-hand side string, corresponds derivative formula comment: possible comment Example: equivalent text form :","code":"ode <- Ode(\"A_DEPOT\", \"-KA * A_DEPOT\", comment=\"This is my depot compartment\") ode ## d/dt(A_DEPOT)=-KA * A_DEPOT # This is my depot compartment"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v02_structural_model.html","id":"line-break","dir":"Articles","previous_headings":"","what":"Line break","title":"Insight on the structural model","text":"Line breaks can added model add clear separations blocks equations. field. Example: equivalent text form obviously separation line.","code":"linebreak <- LineBreak()"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v02_structural_model.html","id":"comment","dir":"Articles","previous_headings":"","what":"Comment","title":"Insight on the structural model","text":"Comments can specified place model. unique field: x: comment ’d like add Example: equivalent text form :","code":"comment <- Comment(\"This is my first comment\") comment ## # This is my first comment"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v02_structural_model.html","id":"if-statement","dir":"Articles","previous_headings":"","what":"If-statement","title":"Insight on the structural model","text":"-statements allow variable take different values according different specified conditions. condition: given condition equation: equation (see definition ) comment: possible comment Example: equivalent text form : common use -statements add covariate effects model. example: equivalent text : Please note mrgsolve require extra variables (like COV_EFFECT previous example) initialised predefined value, makes lot sense general.","code":"ifStatement <- IfStatement(\"COV==1\", Equation(\"COV_EFFECT\", \"0.2\"), comment=\"This is an if statement\") ifStatement ## if (COV==1) COV_EFFECT=0.2 # This is an if statement main <- MainRecord() main <- main %>%   add(Equation(\"COV_EFFECT\", \"0\")) %>% # Initialisation   add(IfStatement(\"COV==1\", Equation(\"COV_EFFECT\", \"0.1\"))) %>%  # Covariate value is 1 in dataset   add(IfStatement(\"COV==2\", Equation(\"COV_EFFECT\", \"0.2\"))) %>%  # Covariate value is 2 in dataset   add(IfStatement(\"COV==3\", Equation(\"COV_EFFECT\", \"0.3\")))      # Covariate value is 3 in dataset main ## [MAIN] ## COV_EFFECT=0 ## if (COV==1) COV_EFFECT=0.1 ## if (COV==2) COV_EFFECT=0.2 ## if (COV==3) COV_EFFECT=0.3"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v02_structural_model.html","id":"additional-remarks","dir":"Articles","previous_headings":"","what":"Additional remarks","title":"Insight on the structural model","text":"Package campsismod check equations grammar point view. work delegated simulation engine (RxODE mrgsolve) C compiler. general, respecting rules listed give successful compatibility engines: formula’s -statement conditions must written C code Functions included Math library C compatible (e.g. cos, sin, etc) Use pow function writing exponents (^ accepted RxODE, mrgsolve) Scientific notation numbers accepted (e.g. 2.51e-01) Initialise extra variables (see example section )","code":""},{"path":"https://calvagone.github.io/campsismod.doc/articles/v03_model_adaptation.html","id":"prerequisite","dir":"Articles","previous_headings":"","what":"Prerequisite","title":"Adapt your model","text":"vignette, please load campsismod package load minimalist model created previous vignette.","code":"library(campsismod) model <- read.campsis(\"resources/minimalist_model/\")"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v03_model_adaptation.html","id":"define-the-concentration","dir":"Articles","previous_headings":"","what":"Define the concentration","title":"Adapt your model","text":"concentration defined amount drug present central compartment divided apparent volume distribution. Let’s now define volume fixed constant 100 model. can achieved follows: default, new equation appended model parameters, MAIN code record. Now, like define plasma concentration. can done adding equation ODE code record. , ’ll use argument pos define position equation. can inserted, instance, right ordinary differential equation:","code":"model <- model %>% add(Equation(\"V\", \"100\")) model ## [MAIN] ## K=THETA_K*exp(ETA_K) # Elimination constant ## V=100 ##  ## [ODE] ## d/dt(A_CENTRAL)=-K*A_CENTRAL ##  ## [INIT] ## A_CENTRAL=1000 # Initial value ##  ##  ## THETA's: ##   name index value   fix ## 1    K     1  0.06 FALSE ## OMEGA's: ##   name index index2 value   fix type same ## 1    K     1      1    15 FALSE  cv%   NA ## SIGMA's: ## # A tibble: 0 × 0 ## No variance-covariance matrix ##  ## Compartments: ## A_CENTRAL (CMT=1) model <- model %>% add(Equation(\"CP\", \"A_CENTRAL/V\"), pos=Position(Ode(\"A_CENTRAL\"))) model ## [MAIN] ## K=THETA_K*exp(ETA_K) # Elimination constant ## V=100 ##  ## [ODE] ## d/dt(A_CENTRAL)=-K*A_CENTRAL ## CP=A_CENTRAL/V ##  ## [INIT] ## A_CENTRAL=1000 # Initial value ##  ##  ## THETA's: ##   name index value   fix ## 1    K     1  0.06 FALSE ## OMEGA's: ##   name index index2 value   fix type same ## 1    K     1      1    15 FALSE  cv%   NA ## SIGMA's: ## # A tibble: 0 × 0 ## No variance-covariance matrix ##  ## Compartments: ## A_CENTRAL (CMT=1)"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v03_model_adaptation.html","id":"define-an-error-model","dir":"Articles","previous_headings":"","what":"Define an error model","title":"Adapt your model","text":"Say want add proportional error model concentration coefficient variation 20%. therefore need add new parameter SIGMA model: , need add new ERROR code record appropriate equations:","code":"model <- model %>% add(Sigma(\"PROP\", value=20, type=\"cv%\")) error <- ErrorRecord() error <- error %>% add(Equation(\"OBS_CP\", \"CP*(1 + EPS_PROP)\")) model <- model %>% add(error) model ## [MAIN] ## K=THETA_K*exp(ETA_K) # Elimination constant ## V=100 ##  ## [ODE] ## d/dt(A_CENTRAL)=-K*A_CENTRAL ## CP=A_CENTRAL/V ##  ## [INIT] ## A_CENTRAL=1000 # Initial value ##  ## [ERROR] ## OBS_CP=CP*(1 + EPS_PROP) ##  ##  ## THETA's: ##   name index value   fix ## 1    K     1  0.06 FALSE ## OMEGA's: ##   name index index2 value   fix type same ## 1    K     1      1    15 FALSE  cv%   NA ## SIGMA's: ##   name index index2 value   fix type ## 1 PROP     1      1    20 FALSE  cv% ## No variance-covariance matrix ##  ## Compartments: ## A_CENTRAL (CMT=1)"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v03_model_adaptation.html","id":"simulate-the-observed-concentration","dir":"Articles","previous_headings":"","what":"Simulate the observed concentration","title":"Adapt your model","text":"Let’s now simulate individuals show OBS_CP.","code":"library(campsis) dataset <- Dataset(3) %>% add(Observations(seq(0,24,by=3))) results <- model %>% simulate(dataset=dataset, seed=0) spaghettiPlot(results, \"OBS_CP\")"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v03_model_adaptation.html","id":"a-couple-of-useful-functions-in-action","dir":"Articles","previous_headings":"","what":"A couple of useful functions in action","title":"Adapt your model","text":"can check existence equation (type model statement), calling function contains. way, can retrieve model statement easily using function find: instance, right-hand side formula equation CP can retrieved follows: model statement may replaced using function replace: Finally, model statements can also deleted forever (making model broken following case):","code":"model %>% contains(Equation(\"CP\")) ## [1] TRUE model %>% contains(Ode(\"A_CENTRAL\")) ## [1] TRUE model %>% find(Equation(\"CP\")) ## CP=A_CENTRAL/V model %>% find(Ode(\"A_CENTRAL\")) ## d/dt(A_CENTRAL)=-K*A_CENTRAL (model %>% find(Equation(\"CP\")))@rhs ## [1] \"A_CENTRAL/V\" model %>% replace(Equation(\"V\", \"50\")) # Previous value of 100 is overridden ## [MAIN] ## K=THETA_K*exp(ETA_K) # Elimination constant ## V=50 ##  ## [ODE] ## d/dt(A_CENTRAL)=-K*A_CENTRAL ## CP=A_CENTRAL/V ##  ## [INIT] ## A_CENTRAL=1000 # Initial value ##  ## [ERROR] ## OBS_CP=CP*(1 + EPS_PROP) ##  ##  ## THETA's: ##   name index value   fix ## 1    K     1  0.06 FALSE ## OMEGA's: ##   name index index2 value   fix type same ## 1    K     1      1    15 FALSE  cv%   NA ## SIGMA's: ##   name index index2 value   fix type ## 1 PROP     1      1    20 FALSE  cv% ## No variance-covariance matrix ##  ## Compartments: ## A_CENTRAL (CMT=1) model %>% delete(Equation(\"V\")) ## [MAIN] ## K=THETA_K*exp(ETA_K) # Elimination constant ##  ## [ODE] ## d/dt(A_CENTRAL)=-K*A_CENTRAL ## CP=A_CENTRAL/V ##  ## [INIT] ## A_CENTRAL=1000 # Initial value ##  ## [ERROR] ## OBS_CP=CP*(1 + EPS_PROP) ##  ##  ## THETA's: ##   name index value   fix ## 1    K     1  0.06 FALSE ## OMEGA's: ##   name index index2 value   fix type same ## 1    K     1      1    15 FALSE  cv%   NA ## SIGMA's: ##   name index index2 value   fix type ## 1 PROP     1      1    20 FALSE  cv% ## No variance-covariance matrix ##  ## Compartments: ## A_CENTRAL (CMT=1)"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v04_compartment_properties.html","id":"prerequisite","dir":"Articles","previous_headings":"","what":"Prerequisite","title":"Play with compartment properties","text":"vignette, please load campsismod package load minimalist model created first vignette.","code":"library(campsismod) model <- read.campsis(\"resources/minimalist_model/\")"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v04_compartment_properties.html","id":"create-new-compartment-properties","dir":"Articles","previous_headings":"","what":"Create new compartment properties","title":"Play with compartment properties","text":"Let’s invent basic scenario: like infuse 1000 central compartment fixed rate 100 fixed lag time 2. First, ’re going delete initial condition minimalist model. done follows: strictly equal (prefer working compartment names): can now add fixed rate infusions go central compartment: Finally, let’s now add constant lag time: OK, model looks like now:","code":"model_ <- model %>% delete(InitialCondition(compartment=1)) model_ ## [MAIN] ## K=THETA_K*exp(ETA_K) # Elimination constant ##  ## [ODE] ## d/dt(A_CENTRAL)=-K*A_CENTRAL ##  ##  ## THETA's: ##   name index value   fix ## 1    K     1  0.06 FALSE ## OMEGA's: ##   name index index2 value   fix type same ## 1    K     1      1    15 FALSE  cv%   NA ## SIGMA's: ## # A tibble: 0 × 0 ## No variance-covariance matrix ##  ## Compartments: ## A_CENTRAL (CMT=1) model <- model %>% delete(InitialCondition(compartment= model %>% getCompartmentIndex(\"CENTRAL\"))) model <- model %>% add(InfusionRate(compartment=1, \"100\")) model <- model %>% add(LagTime(compartment=1, \"2\")) model ## [MAIN] ## K=THETA_K*exp(ETA_K) # Elimination constant ##  ## [ODE] ## d/dt(A_CENTRAL)=-K*A_CENTRAL ##  ## [LAG] ## A_CENTRAL=2 ##  ## [RATE] ## A_CENTRAL=100 ##  ##  ## THETA's: ##   name index value   fix ## 1    K     1  0.06 FALSE ## OMEGA's: ##   name index index2 value   fix type same ## 1    K     1      1    15 FALSE  cv%   NA ## SIGMA's: ## # A tibble: 0 × 0 ## No variance-covariance matrix ##  ## Compartments: ## A_CENTRAL (CMT=1)"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v04_compartment_properties.html","id":"simulate-our-model","dir":"Articles","previous_headings":"","what":"Simulate our model","title":"Play with compartment properties","text":"Let’s now simulate individuals show A_CENTRAL, .e., amount drug central compartment. First, need define infusion 1000 CAMPSIS dataset, well observations times. , can run simulation.","code":"library(campsis) dataset <- Dataset(5) %>%    add(Infusion(time=0, amount=1000)) %>%   add(Observations(seq(0,36,by=0.5))) results <- model %>% simulate(dataset=dataset, seed=1) spaghettiPlot(results, \"A_CENTRAL\")"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v04_compartment_properties.html","id":"a-couple-of-useful-functions-in-action","dir":"Articles","previous_headings":"","what":"A couple of useful functions in action","title":"Play with compartment properties","text":"previously, let’s demonstrate use couple interesting functions: Check existence compartment: Check existence property: Find compartment: Find compartment property: Replace compartment property: Interestingly, name compartment can replaced follows:","code":"model %>% contains(Compartment(1)) ## [1] TRUE # Or equivalenty: model %>% contains(Compartment(model %>% getCompartmentIndex(\"CENTRAL\"))) ## [1] TRUE model %>% contains(InfusionRate(1)) ## [1] TRUE model %>% contains(InfusionDuration(1)) ## [1] FALSE model %>% find(Compartment(1)) ## A_CENTRAL (CMT=1) model %>% find(InfusionRate(1)) ## RATE (CMT=1): 100 model %>% replace(InfusionRate(1, \"200\")) # Previous value of 100 is overridden ## [MAIN] ## K=THETA_K*exp(ETA_K) # Elimination constant ##  ## [ODE] ## d/dt(A_CENTRAL)=-K*A_CENTRAL ##  ## [LAG] ## A_CENTRAL=2 ##  ## [RATE] ## A_CENTRAL=200 ##  ##  ## THETA's: ##   name index value   fix ## 1    K     1  0.06 FALSE ## OMEGA's: ##   name index index2 value   fix type same ## 1    K     1      1    15 FALSE  cv%   NA ## SIGMA's: ## # A tibble: 0 × 0 ## No variance-covariance matrix ##  ## Compartments: ## A_CENTRAL (CMT=1) model %>% replace(Compartment(1, name=\"CENT\")) %>%   delete(Ode(\"A_CENTRAL\")) %>%   add(Ode(\"A_CENT\", \"-K*A_CENT\")) ## [MAIN] ## K=THETA_K*exp(ETA_K) # Elimination constant ##  ## [ODE] ## d/dt(A_CENT)=-K*A_CENT ##  ## [LAG] ## A_CENT=2 ##  ## [RATE] ## A_CENT=100 ##  ##  ## THETA's: ##   name index value   fix ## 1    K     1  0.06 FALSE ## OMEGA's: ##   name index index2 value   fix type same ## 1    K     1      1    15 FALSE  cv%   NA ## SIGMA's: ## # A tibble: 0 × 0 ## No variance-covariance matrix ##  ## Compartments: ## A_CENT (CMT=1)"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v05_parameters.html","id":"prerequisite","dir":"Articles","previous_headings":"","what":"Prerequisite","title":"Adapt your parameters","text":"examples require package campismod.","code":"library(campsismod)"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v05_parameters.html","id":"retrieve-your-parameters","dir":"Articles","previous_headings":"","what":"Retrieve your parameters","title":"Adapt your parameters","text":"examples illustrated based reference 2-compartment PK model find built-library. model 5 parameters. parameters inter-individual variability defined. retrieve parameter name, just call method find follows: parameters can also alternatively retrieved index(es). Use specific method getByIndex created purpose:","code":"model <- model_library$advan4_trans4 model ## [MAIN] ## KA=THETA_KA*exp(ETA_KA) ## CL=THETA_CL*exp(ETA_CL) ## V2=THETA_V2*exp(ETA_V2) ## V3=THETA_V3*exp(ETA_V3) ## Q=THETA_Q*exp(ETA_Q) ## S2=V2 ##  ## [ODE] ## d/dt(A_DEPOT)=-KA*A_DEPOT ## d/dt(A_CENTRAL)=KA*A_DEPOT + Q*A_PERIPHERAL/V3 + (-CL/V2 - Q/V2)*A_CENTRAL ## d/dt(A_PERIPHERAL)=-Q*A_PERIPHERAL/V3 + Q*A_CENTRAL/V2 ## d/dt(A_OUTPUT)=CL*A_CENTRAL/V2 ## F=A_CENTRAL/S2 ##  ## [ERROR] ## CP=F ## OBS_CP=CP*(EPS_PROP + 1) ## Y=OBS_CP ##  ##  ## THETA's: ##   name index value   fix ## 1   KA     1     1 FALSE ## 2   CL     2     5 FALSE ## 3   V2     3    80 FALSE ## 4   V3     4    20 FALSE ## 5    Q     5     4 FALSE ## OMEGA's: ##   name index index2 value   fix type same ## 1   KA     1      1 0.025 FALSE  var   NA ## 2   CL     2      2 0.025 FALSE  var   NA ## 3   V2     3      3 0.025 FALSE  var   NA ## 4   V3     4      4 0.025 FALSE  var   NA ## 5    Q     5      5 0.025 FALSE  var   NA ## SIGMA's: ##   name index index2 value   fix type ## 1 PROP     1      1 0.025 FALSE  var ## No variance-covariance matrix ##  ## Compartments: ## A_DEPOT (CMT=1) ## A_CENTRAL (CMT=2) ## A_PERIPHERAL (CMT=3) ## A_OUTPUT (CMT=4) model %>% find(Theta(\"CL\")) ##   name index value   fix ## 1   CL     2     5 FALSE model %>% find(Omega(\"KA\")) ##   name index index2 value   fix type same ## 1   KA     1      1 0.025 FALSE  var   NA model %>% find(Sigma(\"PROP\")) ##   name index index2 value   fix type ## 1 PROP     1      1 0.025 FALSE  var model@parameters %>% getByIndex(Theta(index=2)) ##   name index value   fix ## 1   CL     2     5 FALSE model@parameters %>% getByIndex(Omega(index=1, index2=1)) ##   name index index2 value   fix type same ## 1   KA     1      1 0.025 FALSE  var   NA model@parameters %>% getByIndex(Sigma(index=1, index2=1)) ##   name index index2 value   fix type ## 1 PROP     1      1 0.025 FALSE  var"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v05_parameters.html","id":"access-parameter-values","dir":"Articles","previous_headings":"","what":"Access parameter values","title":"Adapt your parameters","text":"Accessing parameter values straightforward. Parameters slot value may accessed. OMEGA SIGMA parameters, careful; interpretation value depends type parameter. may var (variance), covar (covariance), sd (standard deviation), cv (value expressed coefficient variation), cv% (value expressed coefficient variation percentage). quick access value variance covariance, method standardise can called first parameter . especially useful values expressed CV standard deviation.","code":"thetaCL <- model %>% find(Theta(\"CL\")) thetaCL@value ## [1] 5 theta <- Omega(name=\"TEST\", index=1, index2=1, value=15, type=\"cv%\") theta@value # 15 is returned ## [1] 15 theta_standardised <- theta %>% standardise() # Conversion to variance theta_standardised ##   name index index2      value   fix type same ## 1 TEST     1      1 0.02225061 FALSE  var   NA theta_standardised@value ## [1] 0.02225061"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v05_parameters.html","id":"replace-parameters","dir":"Articles","previous_headings":"","what":"Replace parameters","title":"Adapt your parameters","text":"Parameters can replaced easily. examples:","code":"model <- model %>% replace(Theta(\"KA\", value=2)) # Previous value for KA was 1 model <- model %>% replace(Omega(\"CL\", value=20, type=\"cv%\")) # Previous value was a variance of 0.025 model ## [MAIN] ## KA=THETA_KA*exp(ETA_KA) ## CL=THETA_CL*exp(ETA_CL) ## V2=THETA_V2*exp(ETA_V2) ## V3=THETA_V3*exp(ETA_V3) ## Q=THETA_Q*exp(ETA_Q) ## S2=V2 ##  ## [ODE] ## d/dt(A_DEPOT)=-KA*A_DEPOT ## d/dt(A_CENTRAL)=KA*A_DEPOT + Q*A_PERIPHERAL/V3 + (-CL/V2 - Q/V2)*A_CENTRAL ## d/dt(A_PERIPHERAL)=-Q*A_PERIPHERAL/V3 + Q*A_CENTRAL/V2 ## d/dt(A_OUTPUT)=CL*A_CENTRAL/V2 ## F=A_CENTRAL/S2 ##  ## [ERROR] ## CP=F ## OBS_CP=CP*(EPS_PROP + 1) ## Y=OBS_CP ##  ##  ## THETA's: ##   name index value   fix ## 1   KA     1     2 FALSE ## 2   CL     2     5 FALSE ## 3   V2     3    80 FALSE ## 4   V3     4    20 FALSE ## 5    Q     5     4 FALSE ## OMEGA's: ##   name index index2  value   fix type same ## 1   KA     1      1  0.025 FALSE  var   NA ## 2   CL     2      2 20.000 FALSE  cv%   NA ## 3   V2     3      3  0.025 FALSE  var   NA ## 4   V3     4      4  0.025 FALSE  var   NA ## 5    Q     5      5  0.025 FALSE  var   NA ## SIGMA's: ##   name index index2 value   fix type ## 1 PROP     1      1 0.025 FALSE  var ## No variance-covariance matrix ##  ## Compartments: ## A_DEPOT (CMT=1) ## A_CENTRAL (CMT=2) ## A_PERIPHERAL (CMT=3) ## A_OUTPUT (CMT=4)"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v05_parameters.html","id":"delete-parameters","dir":"Articles","previous_headings":"","what":"Delete parameters","title":"Adapt your parameters","text":"Parameters can deleted. Please note anything equations. Also, indexes won’t re-adjusted. examples: expected, model valid anymore:","code":"model <- model %>% delete(Theta(\"KA\")) model <- model %>% delete(Omega(\"CL\")) model ## [MAIN] ## KA=THETA_KA*exp(ETA_KA) ## CL=THETA_CL*exp(ETA_CL) ## V2=THETA_V2*exp(ETA_V2) ## V3=THETA_V3*exp(ETA_V3) ## Q=THETA_Q*exp(ETA_Q) ## S2=V2 ##  ## [ODE] ## d/dt(A_DEPOT)=-KA*A_DEPOT ## d/dt(A_CENTRAL)=KA*A_DEPOT + Q*A_PERIPHERAL/V3 + (-CL/V2 - Q/V2)*A_CENTRAL ## d/dt(A_PERIPHERAL)=-Q*A_PERIPHERAL/V3 + Q*A_CENTRAL/V2 ## d/dt(A_OUTPUT)=CL*A_CENTRAL/V2 ## F=A_CENTRAL/S2 ##  ## [ERROR] ## CP=F ## OBS_CP=CP*(EPS_PROP + 1) ## Y=OBS_CP ##  ##  ## THETA's: ##   name index value   fix ## 1   CL     2     5 FALSE ## 2   V2     3    80 FALSE ## 3   V3     4    20 FALSE ## 4    Q     5     4 FALSE ## OMEGA's: ##   name index index2 value   fix type same ## 1   KA     1      1 0.025 FALSE  var   NA ## 2   V2     3      3 0.025 FALSE  var   NA ## 3   V3     4      4 0.025 FALSE  var   NA ## 4    Q     5      5 0.025 FALSE  var   NA ## SIGMA's: ##   name index index2 value   fix type ## 1 PROP     1      1 0.025 FALSE  var ## No variance-covariance matrix ##  ## Compartments: ## A_DEPOT (CMT=1) ## A_CENTRAL (CMT=2) ## A_PERIPHERAL (CMT=3) ## A_OUTPUT (CMT=4) tryCatch({validObject(model, complete=TRUE)}, error=function(msg) {   print(msg) }) ## <simpleError in validObject(model, complete = TRUE): invalid class \"campsis_model\" object: 1: In slot \"parameters\" of class \"parameters\": First THETA index is different than 1 ## invalid class \"campsis_model\" object: 2: In slot \"parameters\" of class \"parameters\": No OMEGA with index 2>"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v06_append_pd_model.html","id":"prerequisite","dir":"Articles","previous_headings":"","what":"Prerequisite","title":"Append a model to another","text":"examples require package campismod.","code":"library(campsismod)"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v06_append_pd_model.html","id":"load-your-base-pk-model","dir":"Articles","previous_headings":"","what":"Load your base PK model","title":"Append a model to another","text":"following code load reference 2-compartment PK model.","code":"pk_model <- model_library$advan4_trans4"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v06_append_pd_model.html","id":"load-an-effect-compartment-model","dir":"Articles","previous_headings":"","what":"Load an effect-compartment model","title":"Append a model to another","text":"effect-compartment model can loaded model library follows: PD model variable PK_CONC, needs linked PK concentration. Therefore, need adapt follows:","code":"pd_model <- model_library$effect_cmt_model pd_model ## [MAIN] ## KE0=THETA_KE0*exp(ETA_KE0) ##  ## [ODE] ## PK_CONC=10 ## d/dt(A_EFFECT)=KE0*(PK_CONC - A_EFFECT) ##  ##  ## THETA's: ##   name index value   fix ## 1  KE0     1  0.25 FALSE ## OMEGA's: ##   name index index2 value   fix type same ## 1  KE0     1      1    15 FALSE  cv%   NA ## SIGMA's: ## # A tibble: 0 × 0 ## No variance-covariance matrix ##  ## Compartments: ## A_EFFECT (CMT=1) pd_model <- pd_model %>% replace(Equation(\"PK_CONC\", \"A_CENTRAL/S2\"))"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v06_append_pd_model.html","id":"append-pd-model-to-pk-model","dir":"Articles","previous_headings":"","what":"Append PD model to PK model","title":"Append a model to another","text":"Appending PD model PK model done using add function:","code":"pkpd_model <- pk_model %>% add(pd_model) pkpd_model ## [MAIN] ## KA=THETA_KA*exp(ETA_KA) ## CL=THETA_CL*exp(ETA_CL) ## V2=THETA_V2*exp(ETA_V2) ## V3=THETA_V3*exp(ETA_V3) ## Q=THETA_Q*exp(ETA_Q) ## S2=V2 ## KE0=THETA_KE0*exp(ETA_KE0) ##  ## [ODE] ## d/dt(A_DEPOT)=-KA*A_DEPOT ## d/dt(A_CENTRAL)=KA*A_DEPOT + Q*A_PERIPHERAL/V3 + (-CL/V2 - Q/V2)*A_CENTRAL ## d/dt(A_PERIPHERAL)=-Q*A_PERIPHERAL/V3 + Q*A_CENTRAL/V2 ## d/dt(A_OUTPUT)=CL*A_CENTRAL/V2 ## F=A_CENTRAL/S2 ## PK_CONC=A_CENTRAL/S2 ## d/dt(A_EFFECT)=KE0*(PK_CONC - A_EFFECT) ##  ## [ERROR] ## CP=F ## OBS_CP=CP*(EPS_PROP + 1) ## Y=OBS_CP ##  ##  ## THETA's: ##   name index value   fix ## 1   KA     1  1.00 FALSE ## 2   CL     2  5.00 FALSE ## 3   V2     3 80.00 FALSE ## 4   V3     4 20.00 FALSE ## 5    Q     5  4.00 FALSE ## 6  KE0     6  0.25 FALSE ## OMEGA's: ##   name index index2  value   fix type same ## 1   KA     1      1  0.025 FALSE  var   NA ## 2   CL     2      2  0.025 FALSE  var   NA ## 3   V2     3      3  0.025 FALSE  var   NA ## 4   V3     4      4  0.025 FALSE  var   NA ## 5    Q     5      5  0.025 FALSE  var   NA ## 6  KE0     6      6 15.000 FALSE  cv%   NA ## SIGMA's: ##   name index index2 value   fix type ## 1 PROP     1      1 0.025 FALSE  var ## No variance-covariance matrix ##  ## Compartments: ## A_DEPOT (CMT=1) ## A_CENTRAL (CMT=2) ## A_PERIPHERAL (CMT=3) ## A_OUTPUT (CMT=4) ## A_EFFECT (CMT=5)"},{"path":"https://calvagone.github.io/campsismod.doc/articles/v06_append_pd_model.html","id":"simulate-our-pkpd-model","dir":"Articles","previous_headings":"","what":"Simulate our PK/PD model","title":"Append a model to another","text":"Let’s now simulate PK/PD model: PK concentration Showing delayed effect","code":"library(campsis) dataset <- Dataset(25) %>%    add(Bolus(time=0, amount=1000, compartment=1, ii=12, addl=2)) %>%   add(Observations(times=0:36)) results <- pkpd_model %>% simulate(dataset=dataset, seed=1) shadedPlot(results, \"CP\") shadedPlot(results, \"CP\") shadedPlot(results, \"A_EFFECT\")"},{"path":"https://calvagone.github.io/campsismod.doc/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Luyckx. Author, maintainer.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Luyckx N (2022). campsismod: Generic Implementation PK/PD Model. https://github.com/Calvagone/campsismod, https://calvagone.github.io/.","code":"@Manual{,   title = {campsismod: Generic Implementation of a PK/PD Model},   author = {Nicolas Luyckx},   year = {2022},   note = {https://github.com/Calvagone/campsismod, https://calvagone.github.io/}, }"},{"path":[]},{"path":"https://calvagone.github.io/campsismod.doc/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generic Implementation of a PK/PD Model","text":"Install latest stable release using devtools:","code":"devtools::install_github(\"Calvagone/campsismod\")"},{"path":[]},{"path":"https://calvagone.github.io/campsismod.doc/index.html","id":"load-example-from-model-library","dir":"","previous_headings":"Basic examples","what":"Load example from model library","title":"Generic Implementation of a PK/PD Model","text":"Load 2-compartment PK model built-model library:","code":"library(campsismod) model <- model_library$advan4_trans4"},{"path":"https://calvagone.github.io/campsismod.doc/index.html","id":"write-campsis-model","dir":"","previous_headings":"Basic examples","what":"Write CAMPSIS model","title":"Generic Implementation of a PK/PD Model","text":"","code":"model %>% write(file=\"path_to_model_folder\") list.files(\"path_to_model_folder\") #> [1] \"model.campsis\" \"omega.csv\"     \"sigma.csv\"     \"theta.csv\""},{"path":"https://calvagone.github.io/campsismod.doc/index.html","id":"read-and-show-campsis-model","dir":"","previous_headings":"Basic examples","what":"Read and show CAMPSIS model","title":"Generic Implementation of a PK/PD Model","text":"","code":"model <- read.campsis(file=\"path_to_model_folder\") show(model) #> [MAIN] #> KA=THETA_KA*exp(ETA_KA) #> CL=THETA_CL*exp(ETA_CL) #> V2=THETA_V2*exp(ETA_V2) #> V3=THETA_V3*exp(ETA_V3) #> Q=THETA_Q*exp(ETA_Q) #> S2=V2 #>  #> [ODE] #> d/dt(A_DEPOT)=-KA*A_DEPOT #> d/dt(A_CENTRAL)=KA*A_DEPOT + Q*A_PERIPHERAL/V3 + (-CL/V2 - Q/V2)*A_CENTRAL #> d/dt(A_PERIPHERAL)=-Q*A_PERIPHERAL/V3 + Q*A_CENTRAL/V2 #> d/dt(A_OUTPUT)=CL*A_CENTRAL/V2 #> F=A_CENTRAL/S2 #>  #> [ERROR] #> CP=F #> OBS_CP=CP*(EPS_PROP + 1) #> Y=OBS_CP #>  #>  #> THETA's: #>   name index value   fix #> 1   KA     1     1 FALSE #> 2   CL     2     5 FALSE #> 3   V2     3    80 FALSE #> 4   V3     4    20 FALSE #> 5    Q     5     4 FALSE #> OMEGA's: #>   name index index2 value   fix type same #> 1   KA     1      1 0.025 FALSE  var   NA #> 2   CL     2      2 0.025 FALSE  var   NA #> 3   V2     3      3 0.025 FALSE  var   NA #> 4   V3     4      4 0.025 FALSE  var   NA #> 5    Q     5      5 0.025 FALSE  var   NA #> SIGMA's: #>   name index index2 value   fix type #> 1 PROP     1      1 0.025 FALSE  var #> No variance-covariance matrix #>  #> Compartments: #> A_DEPOT (CMT=1) #> A_CENTRAL (CMT=2) #> A_PERIPHERAL (CMT=3) #> A_OUTPUT (CMT=4)"},{"path":"https://calvagone.github.io/campsismod.doc/index.html","id":"simulate-with-rxode-or-mrgsolve","dir":"","previous_headings":"Basic examples","what":"Simulate with RxODE or mrgsolve","title":"Generic Implementation of a PK/PD Model","text":"RxODE simulation results mrgsolve simulation results","code":"library(campsis)  dataset <- Dataset(5) %>%   add(Bolus(time=0, amount=1000, ii=12, addl=2)) %>%   add(Observations(times=0:36))  rxode <- model %>% simulate(dataset=dataset, dest=\"RxODE\", seed=1) mrgsolve <- model %>% simulate(dataset=dataset, dest=\"mrgsolve\", seed=1) spaghettiPlot(rxode, \"CP\") spaghettiPlot(mrgsolve, \"CP\")"},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://calvagone.github.io/campsismod.doc/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://calvagone.github.io/campsismod.doc/reference/add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add element to list. — add","title":"Add element to list. — add","text":"Add element list.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add element to list. — add","text":"","code":"add(object, x, ...)  # S4 method for pmx_list,pmx_element add(object, x, pos = NULL)  # S4 method for pmx_list,pmx_list add(object, x)  # S4 method for pmx_list,list add(object, x)  # S4 method for compartments,compartment_property add(object, x)  # S4 method for compartments,compartments add(object, x)  # S4 method for parameters,single_array_parameter add(object, x)  # S4 method for parameters,double_array_parameter add(object, x)  # S4 method for parameters,parameters add(object, x)  # S4 method for code_record,model_statement add(object, x, pos = NULL)  # S4 method for code_record,code_record add(object, x)  # S4 method for code_records,code_records add(object, x)  # S4 method for code_records,model_statement add(object, x, pos = NULL)  # S4 method for campsis_model,compartment_property add(object, x)  # S4 method for campsis_model,parameter add(object, x)  # S4 method for campsis_model,code_record add(object, x)  # S4 method for campsis_model,model_statement add(object, x, pos = NULL)  # S4 method for campsis_model,campsis_model add(object, x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add element to list. — add","text":"object list object x element add ... extra arguments, unused generic list pos position x needs added list","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add element to list. — add","text":"modified list object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/addODECompartment.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ODE compartment to compartments object. — addODECompartment","title":"Add ODE compartment to compartments object. — addODECompartment","text":"Add ODE compartment compartments object.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/addODECompartment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ODE compartment to compartments object. — addODECompartment","text":"","code":"addODECompartment(compartments, ode)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/addODECompartment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add ODE compartment to compartments object. — addODECompartment","text":"compartments compartments object ode ODE","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/addODECompartment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add ODE compartment to compartments object. — addODECompartment","text":"compartments object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/addProperties.html","id":null,"dir":"Reference","previous_headings":"","what":"Add properties to compartments object. — addProperties","title":"Add properties to compartments object. — addProperties","text":"Add properties compartments object.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/addProperties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add properties to compartments object. — addProperties","text":"","code":"addProperties(compartments, records, name, init)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/addProperties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add properties to compartments object. — addProperties","text":"compartments compartments object records records name record name look init empty characteristic, completed","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/addProperties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add properties to compartments object. — addProperties","text":"updated compartments object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendCodeRecords.html","id":null,"dir":"Reference","previous_headings":"","what":"Append code records — appendCodeRecords","title":"Append code records — appendCodeRecords","text":"Append code records","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendCodeRecords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append code records — appendCodeRecords","text":"","code":"appendCodeRecords(records1, records2)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendCodeRecords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append code records — appendCodeRecords","text":"records1 base set code records records2 extra set code records appended","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendCodeRecords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append code records — appendCodeRecords","text":"resulting set code records","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendComment.html","id":null,"dir":"Reference","previous_headings":"","what":"Append comment. — appendComment","title":"Append comment. — appendComment","text":"Append comment.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendComment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append comment. — appendComment","text":"","code":"appendComment(str, object, dest)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendComment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append comment. — appendComment","text":"str single character string object model statement dest destination engine, string","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendComment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append comment. — appendComment","text":"single character string followed comment","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendCompartments.html","id":null,"dir":"Reference","previous_headings":"","what":"Append compartments. — appendCompartments","title":"Append compartments. — appendCompartments","text":"Append compartments.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendCompartments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append compartments. — appendCompartments","text":"","code":"appendCompartments(compartments1, compartments2)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendCompartments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append compartments. — appendCompartments","text":"compartments1 base set compartments compartments2 extra set compartments appended","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendCompartments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append compartments. — appendCompartments","text":"resulting set compartments","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Append model (or simply add). — appendModel","title":"Append model (or simply add). — appendModel","text":"Append model (simply add).","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append model (or simply add). — appendModel","text":"","code":"appendModel(model1, model2)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append model (or simply add). — appendModel","text":"model1 base model model2 model append","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append model (or simply add). — appendModel","text":"resulting CAMPSIS model","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Append parameters. — appendParameters","title":"Append parameters. — appendParameters","text":"Append parameters.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append parameters. — appendParameters","text":"","code":"appendParameters(params1, params2)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendParameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append parameters. — appendParameters","text":"params1 base set parameters params2 extra set parameters appended","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/appendParameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append parameters. — appendParameters","text":"resulting set parameters","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/as.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"As data frame method. — as.data.frame","title":"As data frame method. — as.data.frame","text":"data frame method.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/as.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"As data frame method. — as.data.frame","text":"","code":"as.data.frame(x, row.names = NULL, optional = FALSE, ...)  # S4 method for theta,character,logical as.data.frame(x, row.names = NULL, optional = FALSE, ...)  # S4 method for omega,character,logical as.data.frame(x, row.names = NULL, optional = FALSE, ...)  # S4 method for sigma,character,logical as.data.frame(x, row.names = NULL, optional = FALSE, ...)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/as.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"As data frame method. — as.data.frame","text":"x generic object row.names row names optional optional ... extra arguments","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/as.data.frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"As data frame method. — as.data.frame","text":"data frame","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/assertSingleCharacterString.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert the given character vector is a single character string. — assertSingleCharacterString","title":"Assert the given character vector is a single character string. — assertSingleCharacterString","text":"Assert given character vector single character string.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/assertSingleCharacterString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert the given character vector is a single character string. — assertSingleCharacterString","text":"","code":"assertSingleCharacterString(x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/assertSingleCharacterString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert the given character vector is a single character string. — assertSingleCharacterString","text":"x single character string","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/assertSingleCharacterString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert the given character vector is a single character string. — assertSingleCharacterString","text":"return value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/autoDetectNONMEM.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto-detect special variables from NONMEM as compartment properties.\r\nBioavailabilities, infusion durations/rates and lag times will be automatically\r\ndetected. — autoDetectNONMEM","title":"Auto-detect special variables from NONMEM as compartment properties.\r\nBioavailabilities, infusion durations/rates and lag times will be automatically\r\ndetected. — autoDetectNONMEM","text":"Auto-detect special variables NONMEM compartment properties. Bioavailabilities, infusion durations/rates lag times automatically detected.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/autoDetectNONMEM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto-detect special variables from NONMEM as compartment properties.\r\nBioavailabilities, infusion durations/rates and lag times will be automatically\r\ndetected. — autoDetectNONMEM","text":"","code":"autoDetectNONMEM(object, ...)  # S4 method for campsis_model autoDetectNONMEM(object, ...)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/autoDetectNONMEM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto-detect special variables from NONMEM as compartment properties.\r\nBioavailabilities, infusion durations/rates and lag times will be automatically\r\ndetected. — autoDetectNONMEM","text":"object object NONMEM special variables identified ... extra arguments, unused","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/autoDetectNONMEM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auto-detect special variables from NONMEM as compartment properties.\r\nBioavailabilities, infusion durations/rates and lag times will be automatically\r\ndetected. — autoDetectNONMEM","text":"updated object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Bioavailability.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a bioavailability for the specified compartment. — Bioavailability","title":"Create a bioavailability for the specified compartment. — Bioavailability","text":"Create bioavailability specified compartment.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Bioavailability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a bioavailability for the specified compartment. — Bioavailability","text":"","code":"Bioavailability(compartment, rhs = \"\")"},{"path":"https://calvagone.github.io/campsismod.doc/reference/Bioavailability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a bioavailability for the specified compartment. — Bioavailability","text":"compartment compartment index rhs right-hand side part equation","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Bioavailability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a bioavailability for the specified compartment. — Bioavailability","text":"bioavailability property","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/CampsisModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new CAMPSIS model. — CampsisModel","title":"Create a new CAMPSIS model. — CampsisModel","text":"Create new CAMPSIS model.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/CampsisModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new CAMPSIS model. — CampsisModel","text":"","code":"CampsisModel()"},{"path":"https://calvagone.github.io/campsismod.doc/reference/CampsisModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new CAMPSIS model. — CampsisModel","text":"CAMPSIS model, empty","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/campsis_model-class.html","id":null,"dir":"Reference","previous_headings":"","what":"CAMPSIS model class. — campsis_model-class","title":"CAMPSIS model class. — campsis_model-class","text":"CAMPSIS model class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/campsis_model-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"CAMPSIS model class. — campsis_model-class","text":"model list code records parameters model parameters compartments model compartments","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/CodeRecords.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of code records. — CodeRecords","title":"Create a list of code records. — CodeRecords","text":"Create list code records.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/CodeRecords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of code records. — CodeRecords","text":"","code":"CodeRecords()"},{"path":"https://calvagone.github.io/campsismod.doc/reference/CodeRecords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list of code records. — CodeRecords","text":"empty list code records","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/code_record-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Code record class. See this code record as an abstract class.\r\n2 implementations are possible:\r\n- properties record (lag, duration, rate & bioavailability properties)\r\n- statements record (main, ode & error records) — code_record-class","title":"Code record class. See this code record as an abstract class.\r\n2 implementations are possible:\r\n- properties record (lag, duration, rate & bioavailability properties)\r\n- statements record (main, ode & error records) — code_record-class","text":"Code record class. See code record abstract class. 2 implementations possible: - properties record (lag, duration, rate & bioavailability properties) - statements record (main, ode & error records)","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/code_record-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Code record class. See this code record as an abstract class.\r\n2 implementations are possible:\r\n- properties record (lag, duration, rate & bioavailability properties)\r\n- statements record (main, ode & error records) — code_record-class","text":"comment comment, single character value statements model statements","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/comment-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Comment class. A statement starting with #. — comment-class","title":"Comment class. A statement starting with #. — comment-class","text":"Comment class. statement starting #.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Comment.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new comment. — Comment","title":"Create a new comment. — Comment","text":"Create new comment.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Comment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new comment. — Comment","text":"","code":"Comment(x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/Comment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new comment. — Comment","text":"x comment, single character string","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Comment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new comment. — Comment","text":"comment","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/compartment-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Compartment class. — compartment-class","title":"Compartment class. — compartment-class","text":"Compartment class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/compartment-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Compartment class. — compartment-class","text":"name compartment name (without prefix) index compartment index","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Compartment.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a compartment. — Compartment","title":"Create a compartment. — Compartment","text":"Create compartment.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Compartment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a compartment. — Compartment","text":"","code":"Compartment(index, name = NA)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/Compartment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a compartment. — Compartment","text":"index compartment index name compartment name (without prefix)","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Compartment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a compartment. — Compartment","text":"empty list compartments","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/compartments-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Compartments class. — compartments-class","title":"Compartments class. — compartments-class","text":"Compartments class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/compartments-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Compartments class. — compartments-class","text":"properties compartment properties compartments defined class","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Compartments.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of compartments — Compartments","title":"Create a list of compartments — Compartments","text":"Create list compartments","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Compartments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of compartments — Compartments","text":"","code":"Compartments()"},{"path":"https://calvagone.github.io/campsismod.doc/reference/Compartments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list of compartments — Compartments","text":"empty list compartments","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/compartment_bioavailability-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Compartment bioavailability class. — compartment_bioavailability-class","title":"Compartment bioavailability class. — compartment_bioavailability-class","text":"Compartment bioavailability class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/compartment_infusion_duration-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Compartment infusion duration class. — compartment_infusion_duration-class","title":"Compartment infusion duration class. — compartment_infusion_duration-class","text":"Compartment infusion duration class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/compartment_infusion_rate-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Compartment infusion rate class. — compartment_infusion_rate-class","title":"Compartment infusion rate class. — compartment_infusion_rate-class","text":"Compartment infusion rate class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/compartment_initial_condition-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Compartment initial condition class. — compartment_initial_condition-class","title":"Compartment initial condition class. — compartment_initial_condition-class","text":"Compartment initial condition class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/compartment_lag_time-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Compartment lag time class. — compartment_lag_time-class","title":"Compartment lag time class. — compartment_lag_time-class","text":"Compartment lag time class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/compartment_properties-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Compartment properties class. — compartment_properties-class","title":"Compartment properties class. — compartment_properties-class","text":"Compartment properties class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/compartment_property-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Compartment property class. — compartment_property-class","title":"Compartment property class. — compartment_property-class","text":"Compartment property class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/compartment_property-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Compartment property class. — compartment_property-class","text":"compartment related compartment index rhs right-hand side formula comment comment , single character string","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/contains.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an element exists in list. — contains","title":"Check if an element exists in list. — contains","text":"Check element exists list.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/contains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an element exists in list. — contains","text":"","code":"contains(object, x)  # S4 method for pmx_list,pmx_element contains(object, x)  # S4 method for statements_record,model_statement contains(object, x)  # S4 method for campsis_model,pmx_element contains(object, x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/contains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an element exists in list. — contains","text":"object list object x element check exists","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/contains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an element exists in list. — contains","text":"logical value, TRUE FALSE","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/convertAnyComment.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert CAMPSIS comment style to C/C++ code.\r\nOnly the first # is translated to //. — convertAnyComment","title":"Convert CAMPSIS comment style to C/C++ code.\r\nOnly the first # is translated to //. — convertAnyComment","text":"Convert CAMPSIS comment style C/C++ code. first # translated //.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/convertAnyComment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert CAMPSIS comment style to C/C++ code.\r\nOnly the first # is translated to //. — convertAnyComment","text":"","code":"convertAnyComment(x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/convertAnyComment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert CAMPSIS comment style to C/C++ code.\r\nOnly the first # is translated to //. — convertAnyComment","text":"x record line","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/convertAnyComment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert CAMPSIS comment style to C/C++ code.\r\nOnly the first # is translated to //. — convertAnyComment","text":"line comments translated C/C++","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/convertOutvarsToCapture.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert outvars argument to capture. Variables that are already in error block\r\nwill be discarded. — convertOutvarsToCapture","title":"Convert outvars argument to capture. Variables that are already in error block\r\nwill be discarded. — convertOutvarsToCapture","text":"Convert outvars argument capture. Variables already error block discarded.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/convertOutvarsToCapture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert outvars argument to capture. Variables that are already in error block\r\nwill be discarded. — convertOutvarsToCapture","text":"","code":"convertOutvarsToCapture(outvars, model)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/convertOutvarsToCapture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert outvars argument to capture. Variables that are already in error block\r\nwill be discarded. — convertOutvarsToCapture","text":"outvars character vector model CAMPSIS model","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/convertOutvarsToCapture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert outvars argument to capture. Variables that are already in error block\r\nwill be discarded. — convertOutvarsToCapture","text":"variables capture","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/default.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default element from list. — default","title":"Get default element from list. — default","text":"Get default element list.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default element from list. — default","text":"","code":"default(object, ...)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get default element from list. — default","text":"object list object ... additional arguments","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get default element from list. — default","text":"default element list","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete an element from this list. — delete","title":"Delete an element from this list. — delete","text":"Delete element list.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete an element from this list. — delete","text":"","code":"delete(object, x)  # S4 method for pmx_list,pmx_element delete(object, x)  # S4 method for pmx_list,integer delete(object, x)  # S4 method for compartments,compartment_property delete(object, x)  # S4 method for parameters,single_array_parameter delete(object, x)  # S4 method for parameters,double_array_parameter delete(object, x)  # S4 method for statements_record,model_statement delete(object, x)  # S4 method for code_records,model_statement delete(object, x)  # S4 method for campsis_model,compartment_property delete(object, x)  # S4 method for campsis_model,parameter delete(object, x)  # S4 method for campsis_model,code_record delete(object, x)  # S4 method for campsis_model,model_statement delete(object, x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete an element from this list. — delete","text":"object list object x element delete element index","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/delete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete an element from this list. — delete","text":"updated list","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/disable.html","id":null,"dir":"Reference","previous_headings":"","what":"Disable. — disable","title":"Disable. — disable","text":"Disable.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/disable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disable. — disable","text":"","code":"disable(object, x, ...)  # S4 method for parameters,character disable(object, x, ...)  # S4 method for campsis_model,character disable(object, x, ...)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/disable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disable. — disable","text":"object generic object x needs disabled ... extra arguments needed disabling","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/disable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Disable. — disable","text":"object disabled features","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/double_array_parameter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Double-array parameter class. This parameter has 2 indexes. \r\nIt can thus be used to define correlations between parameters. — double_array_parameter-class","title":"Double-array parameter class. This parameter has 2 indexes. \r\nIt can thus be used to define correlations between parameters. — double_array_parameter-class","text":"Double-array parameter class. parameter 2 indexes.  can thus used define correlations parameters.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/duration_record-class.html","id":null,"dir":"Reference","previous_headings":"","what":"(Infusion)-duration record class. — duration_record-class","title":"(Infusion)-duration record class. — duration_record-class","text":"(Infusion)-duration record class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/equation-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Equation class. Any statement in the form A = B. — equation-class","title":"Equation class. Any statement in the form A = B. — equation-class","text":"Equation class. statement form = B.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/equation-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Equation class. Any statement in the form A = B. — equation-class","text":"lhs left-hand side expression rhs right-hand side expression","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Equation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new equation. — Equation","title":"Create a new equation. — Equation","text":"Create new equation.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Equation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new equation. — Equation","text":"","code":"Equation(lhs, rhs = \"\", comment = as.character(NA))"},{"path":"https://calvagone.github.io/campsismod.doc/reference/Equation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new equation. — Equation","text":"lhs left-hand side variable corresponding assigned variable name rhs right-hand side expression corresponding formula comment comment , single character string","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Equation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new equation. — Equation","text":"equation","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/ErrorRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ERROR code record. — ErrorRecord","title":"Create ERROR code record. — ErrorRecord","text":"Create ERROR code record.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/ErrorRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ERROR code record. — ErrorRecord","text":"","code":"ErrorRecord(code = character())"},{"path":"https://calvagone.github.io/campsismod.doc/reference/ErrorRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ERROR code record. — ErrorRecord","text":"code code record","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/ErrorRecord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create ERROR code record. — ErrorRecord","text":"ERROR code record","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/error_record-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Error record class. — error_record-class","title":"Error record class. — error_record-class","text":"Error record class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export function. — export","title":"Export function. — export","text":"Export function.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export function. — export","text":"","code":"export(object, dest, ...)  # S4 method for campsis_model,character export(object, dest, outvars = NULL)  # S4 method for campsis_model,rxode_type export(object, dest, ...)  # S4 method for campsis_model,mrgsolve_type export(object, dest, outvars = NULL)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export function. — export","text":"object generic object dest destination ... optional arguments outvars additional variables capture","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export function. — export","text":"specific object depending given destination","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/export_type-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Export type class. — export_type-class","title":"Export type class. — export_type-class","text":"Export type class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/extractLhs.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract left-hand-side expression. — extractLhs","title":"Extract left-hand-side expression. — extractLhs","text":"Extract left-hand-side expression.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/extractLhs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract left-hand-side expression. — extractLhs","text":"","code":"extractLhs(x, split = \"=\")"},{"path":"https://calvagone.github.io/campsismod.doc/reference/extractLhs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract left-hand-side expression. — extractLhs","text":"x character value split character split","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/extractLhs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract left-hand-side expression. — extractLhs","text":"left-hand-side expression, trimmed","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/extractRhs.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract right-hand-side expression. — extractRhs","title":"Extract right-hand-side expression. — extractRhs","text":"Extract right-hand-side expression.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/extractRhs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract right-hand-side expression. — extractRhs","text":"","code":"extractRhs(x, split = \"=\")"},{"path":"https://calvagone.github.io/campsismod.doc/reference/extractRhs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract right-hand-side expression. — extractRhs","text":"x character value split character split","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/extractRhs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract right-hand-side expression. — extractRhs","text":"right-hand side expression","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/extractTextBetweenBrackets.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract text between brackets. — extractTextBetweenBrackets","title":"Extract text between brackets. — extractTextBetweenBrackets","text":"Extract text brackets.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/extractTextBetweenBrackets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract text between brackets. — extractTextBetweenBrackets","text":"","code":"extractTextBetweenBrackets(x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/extractTextBetweenBrackets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract text between brackets. — extractTextBetweenBrackets","text":"x character value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/extractTextBetweenBrackets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract text between brackets. — extractTextBetweenBrackets","text":"text brackets (trimmed)","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/find.html","id":null,"dir":"Reference","previous_headings":"","what":"Find an element in list. — find","title":"Find an element in list. — find","text":"Find element list.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/find.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find an element in list. — find","text":"","code":"find(object, x)  # S4 method for pmx_list,pmx_element find(object, x)  # S4 method for compartments,compartment_property find(object, x)  # S4 method for statements_record,model_statement find(object, x)  # S4 method for code_records,model_statement find(object, x)  # S4 method for campsis_model,compartment find(object, x)  # S4 method for campsis_model,compartment_property find(object, x)  # S4 method for campsis_model,parameter find(object, x)  # S4 method for campsis_model,code_record find(object, x)  # S4 method for campsis_model,model_statement find(object, x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/find.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find an element in list. — find","text":"object list object x element find, key slots need filled ","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/find.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find an element in list. — find","text":"element list name x, NULL element found","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/fixOmega.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix omega matrix for SAME OMEGA parameters that have NA values due to imperfections in Pharmpy import. — fixOmega","title":"Fix omega matrix for SAME OMEGA parameters that have NA values due to imperfections in Pharmpy import. — fixOmega","text":"Fix omega matrix OMEGA parameters NA values due imperfections Pharmpy import.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/fixOmega.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix omega matrix for SAME OMEGA parameters that have NA values due to imperfections in Pharmpy import. — fixOmega","text":"","code":"fixOmega(object)  # S4 method for parameters fixOmega(object)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/fixOmega.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix omega matrix for SAME OMEGA parameters that have NA values due to imperfections in Pharmpy import. — fixOmega","text":"object generic object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/fixOmega.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix omega matrix for SAME OMEGA parameters that have NA values due to imperfections in Pharmpy import. — fixOmega","text":"parameter matches","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/f_record-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Bioavailability record class. — f_record-class","title":"Bioavailability record class. — f_record-class","text":"Bioavailability record class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getByIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Get element by index. — getByIndex","title":"Get element by index. — getByIndex","text":"Get element index.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getByIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get element by index. — getByIndex","text":"","code":"getByIndex(object, x)  # S4 method for pmx_list,integer getByIndex(object, x)  # S4 method for pmx_list,numeric getByIndex(object, x)  # S4 method for compartment_properties,compartment_property getByIndex(object, x)  # S4 method for parameters,parameter getByIndex(object, x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/getByIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get element by index. — getByIndex","text":"object list object x element index","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getByIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get element by index. — getByIndex","text":"element list whose index matches provided index","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getByName.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an element from a list by name.\r\nNever return more than 1 element. — getByName","title":"Get an element from a list by name.\r\nNever return more than 1 element. — getByName","text":"Get element list name. Never return 1 element.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getByName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an element from a list by name.\r\nNever return more than 1 element. — getByName","text":"","code":"getByName(object, name)  # S4 method for pmx_list,character getByName(object, name)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/getByName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an element from a list by name.\r\nNever return more than 1 element. — getByName","text":"object list object name element name search ","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getByName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an element from a list by name.\r\nNever return more than 1 element. — getByName","text":"element found NULL element found name","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getCompartmentIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the compartment index for the specified compartment name. — getCompartmentIndex","title":"Get the compartment index for the specified compartment name. — getCompartmentIndex","text":"Get compartment index specified compartment name.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getCompartmentIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the compartment index for the specified compartment name. — getCompartmentIndex","text":"","code":"getCompartmentIndex(object, name)  # S4 method for compartments,character getCompartmentIndex(object, name)  # S4 method for campsis_model,character getCompartmentIndex(object, name)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/getCompartmentIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the compartment index for the specified compartment name. — getCompartmentIndex","text":"object generic object contains compartments information name compartment name","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getCompartmentIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the compartment index for the specified compartment name. — getCompartmentIndex","text":"corresponding compartment index","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getCompartments.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect all compartments names from the code records.\r\nOnly for model instantiation. Not exported. — getCompartments","title":"Detect all compartments names from the code records.\r\nOnly for model instantiation. Not exported. — getCompartments","text":"Detect compartments names code records. model instantiation. exported.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getCompartments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect all compartments names from the code records.\r\nOnly for model instantiation. Not exported. — getCompartments","text":"","code":"getCompartments(records)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/getCompartments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect all compartments names from the code records.\r\nOnly for model instantiation. Not exported. — getCompartments","text":"records code records","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getCompartments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect all compartments names from the code records.\r\nOnly for model instantiation. Not exported. — getCompartments","text":"list compartments","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getName.html","id":null,"dir":"Reference","previous_headings":"","what":"Get element name. — getName","title":"Get element name. — getName","text":"Get element name.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get element name. — getName","text":"","code":"getName(x)  # S4 method for unknown_statement getName(x)  # S4 method for comment getName(x)  # S4 method for line_break getName(x)  # S4 method for equation getName(x)  # S4 method for ode getName(x)  # S4 method for if_statement getName(x)  # S4 method for compartment getName(x)  # S4 method for compartment_bioavailability getName(x)  # S4 method for compartment_lag_time getName(x)  # S4 method for compartment_infusion_duration getName(x)  # S4 method for compartment_infusion_rate getName(x)  # S4 method for compartment_initial_condition getName(x)  # S4 method for theta getName(x)  # S4 method for omega getName(x)  # S4 method for sigma getName(x)  # S4 method for main_record getName(x)  # S4 method for ode_record getName(x)  # S4 method for f_record getName(x)  # S4 method for lag_record getName(x)  # S4 method for duration_record getName(x)  # S4 method for rate_record getName(x)  # S4 method for init_record getName(x)  # S4 method for error_record getName(x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/getName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get element name. — getName","text":"x element know name","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get element name. — getName","text":"name element","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getNameInModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the name of the given parameter in the CAMPSIS model. — getNameInModel","title":"Get the name of the given parameter in the CAMPSIS model. — getNameInModel","text":"Get name given parameter CAMPSIS model.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getNameInModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the name of the given parameter in the CAMPSIS model. — getNameInModel","text":"","code":"getNameInModel(x)  # S4 method for theta getNameInModel(x)  # S4 method for omega getNameInModel(x)  # S4 method for sigma getNameInModel(x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/getNameInModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the name of the given parameter in the CAMPSIS model. — getNameInModel","text":"x element know name","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getNameInModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the name of the given parameter in the CAMPSIS model. — getNameInModel","text":"name parameter","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get element names from list. — getNames","title":"Get element names from list. — getNames","text":"Get element names list.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get element names from list. — getNames","text":"","code":"getNames(object)  # S4 method for pmx_list getNames(object)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/getNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get element names from list. — getNames","text":"object list object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get element names from list. — getNames","text":"character vector element names list","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getNONMEMName.html","id":null,"dir":"Reference","previous_headings":"","what":"Get NONMEM name. — getNONMEMName","title":"Get NONMEM name. — getNONMEMName","text":"Get NONMEM name.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getNONMEMName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get NONMEM name. — getNONMEMName","text":"","code":"getNONMEMName(object)  # S4 method for theta getNONMEMName(object)  # S4 method for omega getNONMEMName(object)  # S4 method for sigma getNONMEMName(object)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/getNONMEMName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get NONMEM name. — getNONMEMName","text":"object generic object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getNONMEMName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get NONMEM name. — getNONMEMName","text":"NONMEM name associated object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getPrefix.html","id":null,"dir":"Reference","previous_headings":"","what":"Get prefix. — getPrefix","title":"Get prefix. — getPrefix","text":"Get prefix.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getPrefix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get prefix. — getPrefix","text":"","code":"getPrefix(object, ...)  # S4 method for compartment_bioavailability getPrefix(object, ...)  # S4 method for compartment_lag_time getPrefix(object, ...)  # S4 method for compartment_infusion_duration getPrefix(object, ...)  # S4 method for compartment_infusion_rate getPrefix(object, ...)  # S4 method for compartment_initial_condition getPrefix(object, ...)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/getPrefix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get prefix. — getPrefix","text":"object generic object ... e.g. dest='mrgsolve'","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getPrefix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get prefix. — getPrefix","text":"prefix object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getRecordDelimiter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get record delimiter. — getRecordDelimiter","title":"Get record delimiter. — getRecordDelimiter","text":"Get record delimiter.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getRecordDelimiter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get record delimiter. — getRecordDelimiter","text":"","code":"getRecordDelimiter(line)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/getRecordDelimiter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get record delimiter. — getRecordDelimiter","text":"line line, single character value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getRecordDelimiter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get record delimiter. — getRecordDelimiter","text":"record delimiter brackets","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getRecordName.html","id":null,"dir":"Reference","previous_headings":"","what":"Get record name. — getRecordName","title":"Get record name. — getRecordName","text":"Get record name.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getRecordName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get record name. — getRecordName","text":"","code":"getRecordName(object)  # S4 method for compartment_bioavailability getRecordName(object)  # S4 method for compartment_lag_time getRecordName(object)  # S4 method for compartment_infusion_duration getRecordName(object)  # S4 method for compartment_infusion_rate getRecordName(object)  # S4 method for compartment_initial_condition getRecordName(object)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/getRecordName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get record name. — getRecordName","text":"object generic object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/getRecordName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get record name. — getRecordName","text":"name record","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/grapes-greater-than-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Magritt operator for piping. — %>%","title":"Magritt operator for piping. — %>%","text":"Magritt operator piping.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/grapes-greater-than-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Magritt operator for piping. — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://calvagone.github.io/campsismod.doc/reference/hasComment.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if string contains CAMPSIS-style comments. — hasComment","title":"Check if string contains CAMPSIS-style comments. — hasComment","text":"Check string contains CAMPSIS-style comments.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/hasComment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if string contains CAMPSIS-style comments. — hasComment","text":"","code":"hasComment(x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/hasComment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if string contains CAMPSIS-style comments. — hasComment","text":"x character vector","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/hasComment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if string contains CAMPSIS-style comments. — hasComment","text":"logical value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/IfStatement.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new IF-statement. — IfStatement","title":"Create a new IF-statement. — IfStatement","text":"Create new -statement.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/IfStatement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new IF-statement. — IfStatement","text":"","code":"IfStatement(condition, equation, comment = as.character(NA))"},{"path":"https://calvagone.github.io/campsismod.doc/reference/IfStatement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new IF-statement. — IfStatement","text":"condition condition, single character string equation equation condition met comment comment , single character string","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/IfStatement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new IF-statement. — IfStatement","text":"-statement","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/ifStatementPatternStr.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the IF-statement pattern (string form). — ifStatementPatternStr","title":"Return the IF-statement pattern (string form). — ifStatementPatternStr","text":"Return -statement pattern (string form).","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/ifStatementPatternStr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the IF-statement pattern (string form). — ifStatementPatternStr","text":"","code":"ifStatementPatternStr()"},{"path":"https://calvagone.github.io/campsismod.doc/reference/ifStatementPatternStr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the IF-statement pattern (string form). — ifStatementPatternStr","text":"pattern (regular expression)","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/if_statement-class.html","id":null,"dir":"Reference","previous_headings":"","what":"If-statement class. Any statement in the form if (condition) A = B. — if_statement-class","title":"If-statement class. Any statement in the form if (condition) A = B. — if_statement-class","text":"-statement class. statement form (condition) = B.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/if_statement-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"If-statement class. Any statement in the form if (condition) A = B. — if_statement-class","text":"condition statement condition equation equation ODE","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/indexOf.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the index of an element in list. — indexOf","title":"Get the index of an element in list. — indexOf","text":"Get index element list.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/indexOf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the index of an element in list. — indexOf","text":"","code":"indexOf(object, x)  # S4 method for pmx_list,pmx_element indexOf(object, x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/indexOf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the index of an element in list. — indexOf","text":"object list object x element know index","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/indexOf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the index of an element in list. — indexOf","text":"index element","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/InfusionDuration.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an infusion duration. — InfusionDuration","title":"Create an infusion duration. — InfusionDuration","text":"Create infusion duration.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/InfusionDuration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an infusion duration. — InfusionDuration","text":"","code":"InfusionDuration(compartment, rhs = \"\")"},{"path":"https://calvagone.github.io/campsismod.doc/reference/InfusionDuration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an infusion duration. — InfusionDuration","text":"compartment compartment index rhs right-hand side part equation","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/InfusionDuration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an infusion duration. — InfusionDuration","text":"infusion duration property","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/InfusionRate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an infusion rate. — InfusionRate","title":"Create an infusion rate. — InfusionRate","text":"Create infusion rate.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/InfusionRate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an infusion rate. — InfusionRate","text":"","code":"InfusionRate(compartment, rhs = \"\")"},{"path":"https://calvagone.github.io/campsismod.doc/reference/InfusionRate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an infusion rate. — InfusionRate","text":"compartment compartment index rhs right-hand side part equation","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/InfusionRate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an infusion rate. — InfusionRate","text":"infusion rate property","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/InitialCondition.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an initial condition. — InitialCondition","title":"Create an initial condition. — InitialCondition","text":"Create initial condition.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/InitialCondition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an initial condition. — InitialCondition","text":"","code":"InitialCondition(compartment, rhs = \"\")"},{"path":"https://calvagone.github.io/campsismod.doc/reference/InitialCondition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an initial condition. — InitialCondition","text":"compartment compartment index rhs right-hand side part equation","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/InitialCondition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an initial condition. — InitialCondition","text":"initial condition property","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/init_record-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Init record class. — init_record-class","title":"Init record class. — init_record-class","text":"Init record class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isComment.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if string is a CAMPSIS comment (i.e. not an equation). — isComment","title":"Check if string is a CAMPSIS comment (i.e. not an equation). — isComment","text":"Check string CAMPSIS comment (.e. equation).","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isComment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if string is a CAMPSIS comment (i.e. not an equation). — isComment","text":"","code":"isComment(x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/isComment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if string is a CAMPSIS comment (i.e. not an equation). — isComment","text":"x character vector","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isComment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if string is a CAMPSIS comment (i.e. not an equation). — isComment","text":"logical value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isDiag.html","id":null,"dir":"Reference","previous_headings":"","what":"Is diagonal. — isDiag","title":"Is diagonal. — isDiag","text":"diagonal.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isDiag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is diagonal. — isDiag","text":"","code":"isDiag(object)  # S4 method for double_array_parameter isDiag(object)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/isDiag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is diagonal. — isDiag","text":"object generic object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isDiag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is diagonal. — isDiag","text":"logical value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isEmptyLine.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if string is an empty line. — isEmptyLine","title":"Check if string is an empty line. — isEmptyLine","text":"Check string empty line.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isEmptyLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if string is an empty line. — isEmptyLine","text":"","code":"isEmptyLine(x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/isEmptyLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if string is an empty line. — isEmptyLine","text":"x character vector","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isEmptyLine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if string is an empty line. — isEmptyLine","text":"logical value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isEquation.html","id":null,"dir":"Reference","previous_headings":"","what":"Say if line in record is an equation not. — isEquation","title":"Say if line in record is an equation not. — isEquation","text":"Say line record equation .","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isEquation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Say if line in record is an equation not. — isEquation","text":"","code":"isEquation(x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/isEquation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Say if line in record is an equation not. — isEquation","text":"x character value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isEquation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Say if line in record is an equation not. — isEquation","text":"logical value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isIfStatement.html","id":null,"dir":"Reference","previous_headings":"","what":"Say if line in record is an IF-statement. — isIfStatement","title":"Say if line in record is an IF-statement. — isIfStatement","text":"Say line record -statement.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isIfStatement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Say if line in record is an IF-statement. — isIfStatement","text":"","code":"isIfStatement(x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/isIfStatement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Say if line in record is an IF-statement. — isIfStatement","text":"x character value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isIfStatement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Say if line in record is an IF-statement. — isIfStatement","text":"logical value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isODE.html","id":null,"dir":"Reference","previous_headings":"","what":"Say if line(s) in record is/are ODE or not. — isODE","title":"Say if line(s) in record is/are ODE or not. — isODE","text":"Say line(s) record /ODE .","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isODE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Say if line(s) in record is/are ODE or not. — isODE","text":"","code":"isODE(x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/isODE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Say if line(s) in record is/are ODE or not. — isODE","text":"x character vector","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isODE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Say if line(s) in record is/are ODE or not. — isODE","text":"logical vector","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isRecordDelimiter.html","id":null,"dir":"Reference","previous_headings":"","what":"Is record delimiter. A record delimiter is any line starting with [...]. — isRecordDelimiter","title":"Is record delimiter. A record delimiter is any line starting with [...]. — isRecordDelimiter","text":"record delimiter. record delimiter line starting [...].","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isRecordDelimiter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is record delimiter. A record delimiter is any line starting with [...]. — isRecordDelimiter","text":"","code":"isRecordDelimiter(line)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/isRecordDelimiter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is record delimiter. A record delimiter is any line starting with [...]. — isRecordDelimiter","text":"line line, single character value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isRecordDelimiter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is record delimiter. A record delimiter is any line starting with [...]. — isRecordDelimiter","text":"logical value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isStrictRecordDelimiter.html","id":null,"dir":"Reference","previous_headings":"","what":"Is strict record delimiter. A strict record delimiter is any line starting \r\nwith [...] and followed by nothing but spaces or a possible comment. — isStrictRecordDelimiter","title":"Is strict record delimiter. A strict record delimiter is any line starting \r\nwith [...] and followed by nothing but spaces or a possible comment. — isStrictRecordDelimiter","text":"strict record delimiter. strict record delimiter line starting  [...] followed nothing spaces possible comment.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isStrictRecordDelimiter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is strict record delimiter. A strict record delimiter is any line starting \r\nwith [...] and followed by nothing but spaces or a possible comment. — isStrictRecordDelimiter","text":"","code":"isStrictRecordDelimiter(line)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/isStrictRecordDelimiter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is strict record delimiter. A strict record delimiter is any line starting \r\nwith [...] and followed by nothing but spaces or a possible comment. — isStrictRecordDelimiter","text":"line line, single character value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/isStrictRecordDelimiter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is strict record delimiter. A strict record delimiter is any line starting \r\nwith [...] and followed by nothing but spaces or a possible comment. — isStrictRecordDelimiter","text":"logical value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/LagTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a lag time for the specified compartment. — LagTime","title":"Create a lag time for the specified compartment. — LagTime","text":"Create lag time specified compartment.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/LagTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a lag time for the specified compartment. — LagTime","text":"","code":"LagTime(compartment, rhs = \"\")"},{"path":"https://calvagone.github.io/campsismod.doc/reference/LagTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a lag time for the specified compartment. — LagTime","text":"compartment compartment index rhs right-hand side part equation","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/LagTime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a lag time for the specified compartment. — LagTime","text":"lag time property","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/lag_record-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Lag record class. — lag_record-class","title":"Lag record class. — lag_record-class","text":"Lag record class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/length.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the length of this list. — length,pmx_list-method","title":"Return the length of this list. — length,pmx_list-method","text":"Return length list.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the length of this list. — length,pmx_list-method","text":"","code":"# S4 method for pmx_list length(x)  # S4 method for statements_record length(x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the length of this list. — length,pmx_list-method","text":"x list object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the length of this list. — length,pmx_list-method","text":"length list, integer value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/LineBreak.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new line break. — LineBreak","title":"Create a new line break. — LineBreak","text":"Create new line break.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/LineBreak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new line break. — LineBreak","text":"","code":"LineBreak()"},{"path":"https://calvagone.github.io/campsismod.doc/reference/LineBreak.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new line break. — LineBreak","text":"line break","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/line_break-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Line-break class. A linebreak in the model. — line_break-class","title":"Line-break class. A linebreak in the model. — line_break-class","text":"Line-break class. linebreak model.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/MainRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Create MAIN code record. — MainRecord","title":"Create MAIN code record. — MainRecord","text":"Create MAIN code record.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/MainRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create MAIN code record. — MainRecord","text":"","code":"MainRecord(code = character())"},{"path":"https://calvagone.github.io/campsismod.doc/reference/MainRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create MAIN code record. — MainRecord","text":"code code record","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/main_record-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Main record class. — main_record-class","title":"Main record class. — main_record-class","text":"Main record class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/matchDoubleArrayParameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Match double array parameter from list based on the name instead of the index.\r\nIf a match is found, its indexes are automatically copied. — matchDoubleArrayParameter","title":"Match double array parameter from list based on the name instead of the index.\r\nIf a match is found, its indexes are automatically copied. — matchDoubleArrayParameter","text":"Match double array parameter list based name instead index. match found, indexes automatically copied.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/matchDoubleArrayParameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match double array parameter from list based on the name instead of the index.\r\nIf a match is found, its indexes are automatically copied. — matchDoubleArrayParameter","text":"","code":"matchDoubleArrayParameter(object, x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/matchDoubleArrayParameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match double array parameter from list based on the name instead of the index.\r\nIf a match is found, its indexes are automatically copied. — matchDoubleArrayParameter","text":"object parameters x double array parameter match","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/matchDoubleArrayParameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match double array parameter from list based on the name instead of the index.\r\nIf a match is found, its indexes are automatically copied. — matchDoubleArrayParameter","text":"parameter match found parameter updated indexes match found","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/matchSingleArrayParameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Match single array parameter from list based on the name instead of the index.\r\nIf a match is found, its index is automatically copied. — matchSingleArrayParameter","title":"Match single array parameter from list based on the name instead of the index.\r\nIf a match is found, its index is automatically copied. — matchSingleArrayParameter","text":"Match single array parameter list based name instead index. match found, index automatically copied.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/matchSingleArrayParameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match single array parameter from list based on the name instead of the index.\r\nIf a match is found, its index is automatically copied. — matchSingleArrayParameter","text":"","code":"matchSingleArrayParameter(object, x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/matchSingleArrayParameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match single array parameter from list based on the name instead of the index.\r\nIf a match is found, its index is automatically copied. — matchSingleArrayParameter","text":"object parameters x single array parameter match","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/matchSingleArrayParameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match single array parameter from list based on the name instead of the index.\r\nIf a match is found, its index is automatically copied. — matchSingleArrayParameter","text":"parameter match found parameter updated index match found","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/maxIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Max index. — maxIndex","title":"Max index. — maxIndex","text":"Max index.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/maxIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Max index. — maxIndex","text":"","code":"maxIndex(object)  # S4 method for parameters maxIndex(object)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/maxIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Max index. — maxIndex","text":"object generic object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/maxIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Max index. — maxIndex","text":"max index","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/methodsGlobalFunctions.html","id":null,"dir":"Reference","previous_headings":"","what":"A empty method only used to declare some of the global function definitions\r\ncontained in the package 'methods', which are used intensively. — methodsGlobalFunctions","title":"A empty method only used to declare some of the global function definitions\r\ncontained in the package 'methods', which are used intensively. — methodsGlobalFunctions","text":"empty method used declare global function definitions contained package 'methods', used intensively.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/methodsGlobalFunctions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A empty method only used to declare some of the global function definitions\r\ncontained in the package 'methods', which are used intensively. — methodsGlobalFunctions","text":"","code":"methodsGlobalFunctions()"},{"path":"https://calvagone.github.io/campsismod.doc/reference/methodsGlobalFunctions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A empty method only used to declare some of the global function definitions\r\ncontained in the package 'methods', which are used intensively. — methodsGlobalFunctions","text":"return value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/minIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Min index. — minIndex","title":"Min index. — minIndex","text":"Min index.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/minIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Min index. — minIndex","text":"","code":"minIndex(object)  # S4 method for parameters minIndex(object)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/minIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Min index. — minIndex","text":"object generic object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/minIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Min index. — minIndex","text":"min index","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/ModelStatements.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an empty list of model statements. — ModelStatements","title":"Create an empty list of model statements. — ModelStatements","text":"Create empty list model statements.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/ModelStatements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an empty list of model statements. — ModelStatements","text":"","code":"ModelStatements()"},{"path":"https://calvagone.github.io/campsismod.doc/reference/ModelStatements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an empty list of model statements. — ModelStatements","text":"model statements object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/model_library.html","id":null,"dir":"Reference","previous_headings":"","what":"CAMPSIS model library. — model_library","title":"CAMPSIS model library. — model_library","text":"list containing pharmacokinetic (PK) pharmacodynamic (PD) model templates.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/model_library.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CAMPSIS model library. — model_library","text":"","code":"model_library"},{"path":"https://calvagone.github.io/campsismod.doc/reference/model_library.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CAMPSIS model library. — model_library","text":"list models: advan1_trans1 1-compartment PK model (K,V) advan1_trans2 1-compartment PK model (CL,V) advan2_trans1 1-compartment PK model absorption compartment (KA,K,V) advan2_trans2 1-compartment PK model absorption compartment (KA,CL,V) advan3_trans1 2-compartment PK model (K,V,K12,K21) advan3_trans3 2-compartment PK model (CL,V,Q,VSS) advan3_trans4 2-compartment PK model (CL,V1,V2,Q) advan4_trans1 2-compartment PK model absorption compartment (KA,K,V,K12,K21) advan4_trans3 2-compartment PK model absorption compartment (KA,CL,V,Q,VSS) advan4_trans4 2-compartment PK model absorption compartment (KA,CL,V1,V2,Q) advan11_trans4 3-compartment PK model (CL,V1,V2,V3,Q2,Q3) advan12_trans4 3-compartment PK model absorption compartment (KA,CL,V1,V2,V3,Q2,Q3) direct_effect_model direct effect PD model (EMAX,EC50,GAMMA,E0) effect_cmt_model effect compartment PD model (KE0) irm_kin_inhibition indirect reponse PD model - inhibition KIN (IC50,KIN,KOUT) irm_kin_stimulation indirect reponse PD model - stimulation KIN (EMAX,EC50,KIN,KOUT) irm_kout_inhibition indirect reponse PD model - inhibition KOUT (IC50,KIN,KOUT) irm_kout_stimulation indirect reponse PD model - stimulation KOUT (EMAX,EC50,KIN,KOUT) transit_cmt_model transit compartment PD model (BASE,POWER,MTT,SLOPE,KTR) filgrastim_pkpd_krzyzanski PK/PD model filgrastim (Krzyzanski et al., see URL ) my_model1 Example 2-compartment PK model variance-covariance matrix","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/model_library.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CAMPSIS model library. — model_library","text":"https://www.iconplc.com/innovation/nonmem/ http://repository.ddmore.eu/model/DDMODEL00000077/ https://calvagone.github.io/campsis.doc/","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/model_statement-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Model statement class. Any statement in a code record. — model_statement-class","title":"Model statement class. Any statement in a code record. — model_statement-class","text":"Model statement class. statement code record.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/model_statement-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Model statement class. Any statement in a code record. — model_statement-class","text":"comment comment associated model statement","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/model_statements-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Model statements class. A list of statements. — model_statements-class","title":"Model statements class. A list of statements. — model_statements-class","text":"Model statements class. list statements.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert code record for mrgsolve. — mrgsolveBlock","title":"Convert code record for mrgsolve. — mrgsolveBlock","text":"Convert code record mrgsolve.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveBlock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert code record for mrgsolve. — mrgsolveBlock","text":"","code":"mrgsolveBlock(record, init = NULL, capture = FALSE)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert code record for mrgsolve. — mrgsolveBlock","text":"record code record init name mrgsolve block capture 'capture' instead 'double'","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveBlock.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert code record for mrgsolve. — mrgsolveBlock","text":"translated record mrgsolve","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveCapture.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the CAPTURE block for mrgsolve. — mrgsolveCapture","title":"Get the CAPTURE block for mrgsolve. — mrgsolveCapture","text":"Get CAPTURE block mrgsolve.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveCapture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the CAPTURE block for mrgsolve. — mrgsolveCapture","text":"","code":"mrgsolveCapture(outvars, model)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveCapture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the CAPTURE block for mrgsolve. — mrgsolveCapture","text":"outvars outvars method simulate model CAMPSIS model","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveCapture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the CAPTURE block for mrgsolve. — mrgsolveCapture","text":"CAPTURE block character(0) variable outvars","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveCompartment.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the compartment block for mrgsolve. — mrgsolveCompartment","title":"Get the compartment block for mrgsolve. — mrgsolveCompartment","text":"Get compartment block mrgsolve.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveCompartment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the compartment block for mrgsolve. — mrgsolveCompartment","text":"","code":"mrgsolveCompartment(model)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveCompartment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the compartment block for mrgsolve. — mrgsolveCompartment","text":"model CAMPSIS model","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveCompartment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the compartment block for mrgsolve. — mrgsolveCompartment","text":"character vector, value line","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveMain.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the MAIN block for mrgsolve. — mrgsolveMain","title":"Get the MAIN block for mrgsolve. — mrgsolveMain","text":"Get MAIN block mrgsolve.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveMain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the MAIN block for mrgsolve. — mrgsolveMain","text":"","code":"mrgsolveMain(model)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveMain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the MAIN block for mrgsolve. — mrgsolveMain","text":"model CAMPSIS model","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveMain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the MAIN block for mrgsolve. — mrgsolveMain","text":"MAIN block","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the OMEGA/SIGMA matrix for mrgsolve. — mrgsolveMatrix","title":"Get the OMEGA/SIGMA matrix for mrgsolve. — mrgsolveMatrix","text":"Get OMEGA/SIGMA matrix mrgsolve.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the OMEGA/SIGMA matrix for mrgsolve. — mrgsolveMatrix","text":"","code":"mrgsolveMatrix(model, type = \"omega\")"},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the OMEGA/SIGMA matrix for mrgsolve. — mrgsolveMatrix","text":"model CAMPSIS model type either omega sigma","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the OMEGA/SIGMA matrix for mrgsolve. — mrgsolveMatrix","text":"named matrix character(0) matrix empty","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveOde.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the ODE block for mrgsolve. — mrgsolveOde","title":"Get the ODE block for mrgsolve. — mrgsolveOde","text":"Get ODE block mrgsolve.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveOde.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the ODE block for mrgsolve. — mrgsolveOde","text":"","code":"mrgsolveOde(model)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveOde.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the ODE block for mrgsolve. — mrgsolveOde","text":"model CAMPSIS model","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveOde.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the ODE block for mrgsolve. — mrgsolveOde","text":"ODE block","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveParam.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the parameters block for mrgsolve. — mrgsolveParam","title":"Get the parameters block for mrgsolve. — mrgsolveParam","text":"Get parameters block mrgsolve.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveParam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the parameters block for mrgsolve. — mrgsolveParam","text":"","code":"mrgsolveParam(model)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveParam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the parameters block for mrgsolve. — mrgsolveParam","text":"model CAMPSIS model","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveParam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the parameters block for mrgsolve. — mrgsolveParam","text":"character vector, 1 parameter per line. First one header [PARAM].","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the TABLE block for mrgsolve. — mrgsolveTable","title":"Get the TABLE block for mrgsolve. — mrgsolveTable","text":"Get TABLE block mrgsolve.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the TABLE block for mrgsolve. — mrgsolveTable","text":"","code":"mrgsolveTable(model)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the TABLE block for mrgsolve. — mrgsolveTable","text":"model CAMPSIS model","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolveTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the TABLE block for mrgsolve. — mrgsolveTable","text":"TABLE block least one line error record, character(0) otherwise","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/mrgsolve_type-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Mrgsolve export type class. — mrgsolve_type-class","title":"Mrgsolve export type class. — mrgsolve_type-class","text":"Mrgsolve export type class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/ode-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ODE class. Any statement in the form d/dt(A_CMT) = B. — ode-class","title":"ODE class. Any statement in the form d/dt(A_CMT) = B. — ode-class","text":"ODE class. statement form d/dt(A_CMT) = B.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Ode.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new ordinary differential equation (ODE). — Ode","title":"Create a new ordinary differential equation (ODE). — Ode","text":"Create new ordinary differential equation (ODE).","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Ode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new ordinary differential equation (ODE). — Ode","text":"","code":"Ode(lhs, rhs = \"\", comment = as.character(NA))"},{"path":"https://calvagone.github.io/campsismod.doc/reference/Ode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new ordinary differential equation (ODE). — Ode","text":"lhs left-hand side variable corresponding derivative name, must start 'A_' rhs right-hand side expression corresponding derivative value comment comment , single character string","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Ode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new ordinary differential equation (ODE). — Ode","text":"ODE","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/OdeRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ODE code record. — OdeRecord","title":"Create ODE code record. — OdeRecord","text":"Create ODE code record.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/OdeRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ODE code record. — OdeRecord","text":"","code":"OdeRecord(code = character())"},{"path":"https://calvagone.github.io/campsismod.doc/reference/OdeRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ODE code record. — OdeRecord","text":"code code record","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/OdeRecord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create ODE code record. — OdeRecord","text":"ODE code record","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/ode_record-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ODE record class. — ode_record-class","title":"ODE record class. — ode_record-class","text":"ODE record class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/omega-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Omega parameter class. — omega-class","title":"Omega parameter class. — omega-class","text":"Omega parameter class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/omega-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Omega parameter class. — omega-class","text":"logical value, tell omega previous one","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Omega.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an OMEGA parameter. — Omega","title":"Create an OMEGA parameter. — Omega","text":"Create OMEGA parameter.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Omega.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an OMEGA parameter. — Omega","text":"","code":"Omega(   name = NA,   index = NA,   index2 = NA,   value = NA,   fix = FALSE,   type = NULL,   same = NA )"},{"path":"https://calvagone.github.io/campsismod.doc/reference/Omega.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an OMEGA parameter. — Omega","text":"name parameter name, e.g. CL (prefix OMEGA added automatically) index parameter index index2 second parameter index value parameter value fix parameter fixed estimation, logical value type variance type: 'var', 'sd', 'covar', 'cor', 'cv' 'cv%' NA default, FALSE first OMEGA followed '' OMEGA's, TRUE '' OMEGA's","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Omega.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an OMEGA parameter. — Omega","text":"OMEGA parameter","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/parameter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter class. Any parameter in a pharmacometric model. — parameter-class","title":"Parameter class. Any parameter in a pharmacometric model. — parameter-class","text":"Parameter class. parameter pharmacometric model.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/parameter-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Parameter class. Any parameter in a pharmacometric model. — parameter-class","text":"name parameter name, optional (although recommended) index parameter index, integer value parameter value (e.g. estimated value modelling tool) fix logical value, say parameter fixed modelling phase","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/parameters-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters class. — parameters-class","title":"Parameters class. — parameters-class","text":"Parameters class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/parameters-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Parameters class. — parameters-class","text":"varcov associated variance-covariance matrix","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of parameters. — Parameters","title":"Create a list of parameters. — Parameters","text":"Create list parameters.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of parameters. — Parameters","text":"","code":"Parameters()"},{"path":"https://calvagone.github.io/campsismod.doc/reference/Parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list of parameters. — Parameters","text":"empty list parameters","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/parseIfStatement.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse IF-statement.\r\nAssumption: isIfStatement method already called and returned TRUE. — parseIfStatement","title":"Parse IF-statement.\r\nAssumption: isIfStatement method already called and returned TRUE. — parseIfStatement","text":"Parse -statement. Assumption: isIfStatement method already called returned TRUE.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/parseIfStatement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse IF-statement.\r\nAssumption: isIfStatement method already called and returned TRUE. — parseIfStatement","text":"","code":"parseIfStatement(line, comment = as.character(NA))"},{"path":"https://calvagone.github.io/campsismod.doc/reference/parseIfStatement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse IF-statement.\r\nAssumption: isIfStatement method already called and returned TRUE. — parseIfStatement","text":"line -statement single character string value, comment omitted comment comment, NA default","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/parseIfStatement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse IF-statement.\r\nAssumption: isIfStatement method already called and returned TRUE. — parseIfStatement","text":"statement object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/parseStatements.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse statements code and return CAMPSIS statements. — parseStatements","title":"Parse statements code and return CAMPSIS statements. — parseStatements","text":"Parse statements code return CAMPSIS statements.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/parseStatements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse statements code and return CAMPSIS statements. — parseStatements","text":"","code":"parseStatements(code)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/parseStatements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse statements code and return CAMPSIS statements. — parseStatements","text":"code character vector containing statements (text form)","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/parseStatements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse statements code and return CAMPSIS statements. — parseStatements","text":"list CAMPSIS statements","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/pattern-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Pattern class. — pattern-class","title":"Pattern class. — pattern-class","text":"Pattern class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a pattern. — Pattern","title":"Create a pattern. — Pattern","text":"Create pattern.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a pattern. — Pattern","text":"","code":"Pattern(x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/Pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a pattern. — Pattern","text":"x regular expression","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a pattern. — Pattern","text":"pattern","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/pmx_element-class.html","id":null,"dir":"Reference","previous_headings":"","what":"PMX element class. — pmx_element-class","title":"PMX element class. — pmx_element-class","text":"PMX element class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/pmx_list-class.html","id":null,"dir":"Reference","previous_headings":"","what":"PMX list class. — pmx_list-class","title":"PMX list class. — pmx_list-class","text":"PMX list class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/pmx_list-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"PMX list class. — pmx_list-class","text":"list effective list contain elements type type elements list may contain","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/pmx_position-class.html","id":null,"dir":"Reference","previous_headings":"","what":"PMX position class. — pmx_position-class","title":"PMX position class. — pmx_position-class","text":"PMX position class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/pmx_position_by_element-class.html","id":null,"dir":"Reference","previous_headings":"","what":"PMX position by element class. — pmx_position_by_element-class","title":"PMX position by element class. — pmx_position_by_element-class","text":"PMX position element class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/pmx_position_by_index-class.html","id":null,"dir":"Reference","previous_headings":"","what":"PMX position by index class. — pmx_position_by_index-class","title":"PMX position by index class. — pmx_position_by_index-class","text":"PMX position index class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/pmx_undefined_position-class.html","id":null,"dir":"Reference","previous_headings":"","what":"PMX undefined position class. — pmx_undefined_position-class","title":"PMX undefined position class. — pmx_undefined_position-class","text":"PMX undefined position class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Position.html","id":null,"dir":"Reference","previous_headings":"","what":"Element position in list. — Position","title":"Element position in list. — Position","text":"Element position list.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Element position in list. — Position","text":"","code":"Position(x, after = TRUE)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/Position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Element position in list. — Position","text":"x either integer position (useful add element code record specified position) model element (element can model statement code record) element added added x (TRUE) x (FALSE)","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Position.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Element position in list. — Position","text":"position object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/processDoubleArrayArguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Process double array arguments. — processDoubleArrayArguments","title":"Process double array arguments. — processDoubleArrayArguments","text":"Process double array arguments.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/processDoubleArrayArguments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process double array arguments. — processDoubleArrayArguments","text":"","code":"processDoubleArrayArguments(index, index2, type)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/processDoubleArrayArguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process double array arguments. — processDoubleArrayArguments","text":"index parameter index index2 second parameter index type variance type","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/processDoubleArrayArguments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process double array arguments. — processDoubleArrayArguments","text":"variance type","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/processExtraArg.html","id":null,"dir":"Reference","previous_headings":"","what":"Process extra arguments. — processExtraArg","title":"Process extra arguments. — processExtraArg","text":"Process extra arguments.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/processExtraArg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process extra arguments. — processExtraArg","text":"","code":"processExtraArg(args, name, default = NULL, mandatory = FALSE)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/processExtraArg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process extra arguments. — processExtraArg","text":"args arguments list name argument name retrieve default default value argument present mandatory mandatory argument, logical value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/processExtraArg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process extra arguments. — processExtraArg","text":"requested argument value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/properties_record-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Properties record class. — properties_record-class","title":"Properties record class. — properties_record-class","text":"Properties record class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/rate_record-class.html","id":null,"dir":"Reference","previous_headings":"","what":"(Infusion)-rate record class. — rate_record-class","title":"(Infusion)-rate record class. — rate_record-class","text":"(Infusion)-rate record class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.allparameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all parameters files at once. — read.allparameters","title":"Read all parameters files at once. — read.allparameters","text":"Read parameters files .","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.allparameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all parameters files at once. — read.allparameters","text":"","code":"read.allparameters(folder)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.allparameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all parameters files at once. — read.allparameters","text":"folder path folder path zipped project","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.allparameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read all parameters files at once. — read.allparameters","text":"parameters object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.campsis.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a CAMPSIS model. — read.campsis","title":"Read a CAMPSIS model. — read.campsis","text":"Read CAMPSIS model.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.campsis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a CAMPSIS model. — read.campsis","text":"","code":"read.campsis(file)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.campsis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a CAMPSIS model. — read.campsis","text":"file path folder","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.campsis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a CAMPSIS model. — read.campsis","text":"CAMPSIS model","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic read method to read data from a file or a folder. — read","title":"Generic read method to read data from a file or a folder. — read","text":"Generic read method read data file folder.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic read method to read data from a file or a folder. — read","text":"","code":"read(file, ...)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic read method to read data from a file or a folder. — read","text":"file path file folder read ... extra arguments","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic read method to read data from a file or a folder. — read","text":"object representation data contained file","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.model.html","id":null,"dir":"Reference","previous_headings":"","what":"Read model file. — read.model","title":"Read model file. — read.model","text":"Read model file.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read model file. — read.model","text":"","code":"read.model(file)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read model file. — read.model","text":"file path records","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read model file. — read.model","text":"records object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Read parameters file. — read.parameters","title":"Read parameters file. — read.parameters","text":"Read parameters file.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read parameters file. — read.parameters","text":"","code":"read.parameters(file, type)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read parameters file. — read.parameters","text":"file path CSV file type parameter type: 'theta', 'omega' 'sigma'","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read parameters file. — read.parameters","text":"parameters sub list","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.pmxmod.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a CAMPSIS model (deprecated). — read.pmxmod","title":"Read a CAMPSIS model (deprecated). — read.pmxmod","text":"Read CAMPSIS model (deprecated).","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.pmxmod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a CAMPSIS model (deprecated). — read.pmxmod","text":"","code":"read.pmxmod(file)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.pmxmod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a CAMPSIS model (deprecated). — read.pmxmod","text":"file path folder","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.pmxmod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a CAMPSIS model (deprecated). — read.pmxmod","text":"CAMPSIS model","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.varcov.html","id":null,"dir":"Reference","previous_headings":"","what":"Read variance-covariance file. — read.varcov","title":"Read variance-covariance file. — read.varcov","text":"Read variance-covariance file.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.varcov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read variance-covariance file. — read.varcov","text":"","code":"read.varcov(file)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.varcov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read variance-covariance file. — read.varcov","text":"file path CSV file","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/read.varcov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read variance-covariance file. — read.varcov","text":"variance-covariance matrix","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/removeTrailingLineBreaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove all trailing line breaks. — removeTrailingLineBreaks","title":"Remove all trailing line breaks. — removeTrailingLineBreaks","text":"Remove trailing line breaks.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/removeTrailingLineBreaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove all trailing line breaks. — removeTrailingLineBreaks","text":"","code":"removeTrailingLineBreaks(x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/removeTrailingLineBreaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove all trailing line breaks. — removeTrailingLineBreaks","text":"x character vector","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/removeTrailingLineBreaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove all trailing line breaks. — removeTrailingLineBreaks","text":"character vector","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/replace.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace element by another in list. — replace","title":"Replace element by another in list. — replace","text":"Replace element another list.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/replace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace element by another in list. — replace","text":"","code":"replace(object, x)  # S4 method for pmx_list,pmx_element replace(object, x)  # S4 method for pmx_list,pmx_list replace(object, x)  # S4 method for pmx_list,list replace(object, x)  # S4 method for compartments,compartment_property replace(object, x)  # S4 method for parameters,single_array_parameter replace(object, x)  # S4 method for parameters,double_array_parameter replace(object, x)  # S4 method for statements_record,model_statement replace(object, x)  # S4 method for code_records,model_statement replace(object, x)  # S4 method for campsis_model,compartment replace(object, x)  # S4 method for campsis_model,compartment_property replace(object, x)  # S4 method for campsis_model,parameter replace(object, x)  # S4 method for campsis_model,code_record replace(object, x)  # S4 method for campsis_model,model_statement replace(object, x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/replace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace element by another in list. — replace","text":"object list object x element replace","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/replace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace element by another in list. — replace","text":"list object error element exist list","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/replaceAll.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace all occurrences in object. — replaceAll","title":"Replace all occurrences in object. — replaceAll","text":"Replace occurrences object.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/replaceAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace all occurrences in object. — replaceAll","text":"","code":"replaceAll(object, pattern, replacement, ...)  # S4 method for character,variable_pattern,character replaceAll(object, pattern, replacement, ...)  # S4 method for character,pattern,character replaceAll(object, pattern, replacement, ...)  # S4 method for model_statement,pattern,character replaceAll(object, pattern, replacement, ...)  # S4 method for equation,pattern,character replaceAll(object, pattern, replacement, ...)  # S4 method for if_statement,pattern,character replaceAll(object, pattern, replacement, ...)  # S4 method for code_record,pattern,character replaceAll(object, pattern, replacement, ...)  # S4 method for code_records,pattern,character replaceAll(object, pattern, replacement, ...)  # S4 method for campsis_model,pattern,character replaceAll(object, pattern, replacement, ...)  # S4 method for campsis_model,character,character replaceAll(object, pattern, replacement, ...)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/replaceAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace all occurrences in object. — replaceAll","text":"object generic object (e.g. model, code_record(s), etc.) pattern pattern replaced replacement replacement string ... extra arguments","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/replaceAll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace all occurrences in object. — replaceAll","text":"object occurrences replaced","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/rxodeCode.html","id":null,"dir":"Reference","previous_headings":"","what":"Get code for RxODE. — rxodeCode","title":"Get code for RxODE. — rxodeCode","text":"Get code RxODE.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/rxodeCode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get code for RxODE. — rxodeCode","text":"","code":"rxodeCode(model)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/rxodeCode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get code for RxODE. — rxodeCode","text":"model CAMPSIS model","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/rxodeCode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get code for RxODE. — rxodeCode","text":"corresponding model code RxODE","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/rxodeMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the OMEGA/SIGMA matrix for RxODE. — rxodeMatrix","title":"Get the OMEGA/SIGMA matrix for RxODE. — rxodeMatrix","text":"Get OMEGA/SIGMA matrix RxODE.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/rxodeMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the OMEGA/SIGMA matrix for RxODE. — rxodeMatrix","text":"","code":"rxodeMatrix(model, type = \"omega\")"},{"path":"https://calvagone.github.io/campsismod.doc/reference/rxodeMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the OMEGA/SIGMA matrix for RxODE. — rxodeMatrix","text":"model CAMPSIS model type either omega sigma","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/rxodeMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the OMEGA/SIGMA matrix for RxODE. — rxodeMatrix","text":"omega/sigma named matrix","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/rxodeParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the parameters vector for RxODE. — rxodeParams","title":"Get the parameters vector for RxODE. — rxodeParams","text":"Get parameters vector RxODE.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/rxodeParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the parameters vector for RxODE. — rxodeParams","text":"","code":"rxodeParams(model)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/rxodeParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the parameters vector for RxODE. — rxodeParams","text":"model CAMPSIS model","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/rxodeParams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the parameters vector for RxODE. — rxodeParams","text":"named vector THETA values","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/rxode_type-class.html","id":null,"dir":"Reference","previous_headings":"","what":"RxODE export type class. — rxode_type-class","title":"RxODE export type class. — rxode_type-class","text":"RxODE export type class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/select.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a subset of an object. — select","title":"Get a subset of an object. — select","text":"Get subset object.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a subset of an object. — select","text":"","code":"select(object, ...)  # S4 method for data.frame select(object, ...)  # S4 method for compartment_properties select(object, ...)  # S4 method for parameters select(object, ...)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a subset of an object. — select","text":"object generic object ... arguments select","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a subset of an object. — select","text":"subset object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/sigma-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Sigma parameter class. — sigma-class","title":"Sigma parameter class. — sigma-class","text":"Sigma parameter class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SIGMA parameter. — Sigma","title":"Create a SIGMA parameter. — Sigma","text":"Create SIGMA parameter.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SIGMA parameter. — Sigma","text":"","code":"Sigma(name = NA, index = NA, index2 = NA, value = NA, fix = FALSE, type = NULL)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/Sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SIGMA parameter. — Sigma","text":"name parameter name, e.g. CL (prefix SIGMA added automatically) index parameter index index2 second parameter index value parameter value fix parameter fixed estimation, logical value type variance type: 'var', 'sd', 'covar', 'cv' 'cv%'","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SIGMA parameter. — Sigma","text":"SIGMA parameter","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/single_array_parameter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Single-array parameter class. This parameter has a single index value. — single_array_parameter-class","title":"Single-array parameter class. This parameter has a single index value. — single_array_parameter-class","text":"Single-array parameter class. parameter single index value.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/sort.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort the specified list. — sort","title":"Sort the specified list. — sort","text":"Sort specified list.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/sort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort the specified list. — sort","text":"","code":"sort(x, decreasing = FALSE, ...)  # S4 method for compartment_properties sort(x, decreasing = FALSE, ...)  # S4 method for compartments sort(x, decreasing = FALSE, ...)  # S4 method for parameters sort(x, decreasing = FALSE, ...)  # S4 method for code_records sort(x, decreasing = FALSE, ...)  # S4 method for campsis_model sort(x, decreasing = FALSE, ...)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/sort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort the specified list. — sort","text":"x list object decreasing increasing decreasing order ... extra arguments","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/sort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sort the specified list. — sort","text":"list ordered","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/standardise.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardise. — standardise","title":"Standardise. — standardise","text":"Standardise.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/standardise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardise. — standardise","text":"","code":"standardise(object, ...)  # S4 method for theta standardise(object, ...)  # S4 method for double_array_parameter standardise(object, parameters = NULL, ...)  # S4 method for parameters standardise(object, ...)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/standardise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardise. — standardise","text":"object generic object ... extra arguments needed standardisation parameters list parameters, provided parameter type 'cor'","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/standardise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardise. — standardise","text":"standardised object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/statements_record-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Statements record class. — statements_record-class","title":"Statements record class. — statements_record-class","text":"Statements record class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/theta-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Theta parameter class. — theta-class","title":"Theta parameter class. — theta-class","text":"Theta parameter class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Theta.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a THETA parameter. — Theta","title":"Create a THETA parameter. — Theta","text":"Create THETA parameter.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Theta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a THETA parameter. — Theta","text":"","code":"Theta(name = NA, index = NA, value = NA, fix = FALSE)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/Theta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a THETA parameter. — Theta","text":"name parameter name, e.g. CL (prefix THETA added automatically) index parameter index value parameter value fix parameter fixed estimation, logical value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/Theta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a THETA parameter. — Theta","text":"THETA parameter","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/toString.html","id":null,"dir":"Reference","previous_headings":"","what":"ToString generic method. — toString","title":"ToString generic method. — toString","text":"ToString generic method.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/toString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ToString generic method. — toString","text":"","code":"toString(object, ...)  # S4 method for unknown_statement toString(object, ...)  # S4 method for comment toString(object, ...)  # S4 method for line_break toString(object, ...)  # S4 method for equation toString(object, ...)  # S4 method for ode toString(object, ...)  # S4 method for if_statement toString(object, ...)  # S4 method for compartment toString(object, ...)  # S4 method for compartment_property toString(object, ...)  # S4 method for compartment_initial_condition toString(object, ...)  # S4 method for mrgsolve_model toString(object, ...)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/toString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ToString generic method. — toString","text":"object generic object ... extra arguments needed toString conversion","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/toString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ToString generic method. — toString","text":"character value/vector","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/trim.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim character vector. Remove all leading and trailing spaces. — trim","title":"Trim character vector. Remove all leading and trailing spaces. — trim","text":"Trim character vector. Remove leading trailing spaces.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/trim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim character vector. Remove all leading and trailing spaces. — trim","text":"","code":"trim(x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/trim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim character vector. Remove all leading and trailing spaces. — trim","text":"x character vector","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/trim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim character vector. Remove all leading and trailing spaces. — trim","text":"character vector without leading trailing spaces","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/UndefinedPosition.html","id":null,"dir":"Reference","previous_headings":"","what":"Undefined position. — UndefinedPosition","title":"Undefined position. — UndefinedPosition","text":"Undefined position.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/UndefinedPosition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undefined position. — UndefinedPosition","text":"","code":"UndefinedPosition()"},{"path":"https://calvagone.github.io/campsismod.doc/reference/UndefinedPosition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Undefined position. — UndefinedPosition","text":"undefined position object","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/UnknownStatement.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new ordinary differential equation (ODE). — UnknownStatement","title":"Create a new ordinary differential equation (ODE). — UnknownStatement","text":"Create new ordinary differential equation (ODE).","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/UnknownStatement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new ordinary differential equation (ODE). — UnknownStatement","text":"","code":"UnknownStatement(line, comment = as.character(NA))"},{"path":"https://calvagone.github.io/campsismod.doc/reference/UnknownStatement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new ordinary differential equation (ODE). — UnknownStatement","text":"line line recognised comment comment , single character string","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/UnknownStatement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new ordinary differential equation (ODE). — UnknownStatement","text":"unknown statement","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/unknown_statement-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Unknown statement class. Any statement not recognized by campsismod. — unknown_statement-class","title":"Unknown statement class. Any statement not recognized by campsismod. — unknown_statement-class","text":"Unknown statement class. statement recognized campsismod.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/UnsupportedDestException.html","id":null,"dir":"Reference","previous_headings":"","what":"Unknown destination engine exception. — UnsupportedDestException","title":"Unknown destination engine exception. — UnsupportedDestException","text":"Unknown destination engine exception.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/UnsupportedDestException.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unknown destination engine exception. — UnsupportedDestException","text":"","code":"UnsupportedDestException()"},{"path":"https://calvagone.github.io/campsismod.doc/reference/UnsupportedDestException.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unknown destination engine exception. — UnsupportedDestException","text":"return value","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/updateCompartments.html","id":null,"dir":"Reference","previous_headings":"","what":"Update compartments list from the persisted records.\r\nExported especially for package pmxtran. However, this method should not be called. — updateCompartments","title":"Update compartments list from the persisted records.\r\nExported especially for package pmxtran. However, this method should not be called. — updateCompartments","text":"Update compartments list persisted records. Exported especially package pmxtran. However, method called.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/updateCompartments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update compartments list from the persisted records.\r\nExported especially for package pmxtran. However, this method should not be called. — updateCompartments","text":"","code":"updateCompartments(model)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/updateCompartments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update compartments list from the persisted records.\r\nExported especially for package pmxtran. However, this method should not be called. — updateCompartments","text":"model CAMPSIS model","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/updateCompartments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update compartments list from the persisted records.\r\nExported especially for package pmxtran. However, this method should not be called. — updateCompartments","text":"updated CAMPSIS model, updated compartments list","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/VariablePattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a variable pattern. — VariablePattern","title":"Create a variable pattern. — VariablePattern","text":"Create variable pattern.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/VariablePattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a variable pattern. — VariablePattern","text":"","code":"VariablePattern(x)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/VariablePattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a variable pattern. — VariablePattern","text":"x variable name","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/VariablePattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a variable pattern. — VariablePattern","text":"variable pattern","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/variablePatternStr.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the variable pattern (string form). — variablePatternStr","title":"Return the variable pattern (string form). — variablePatternStr","text":"Return variable pattern (string form).","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/variablePatternStr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the variable pattern (string form). — variablePatternStr","text":"","code":"variablePatternStr()"},{"path":"https://calvagone.github.io/campsismod.doc/reference/variablePatternStr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the variable pattern (string form). — variablePatternStr","text":"pattern (regular expression)","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/variable_pattern-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable pattern class. — variable_pattern-class","title":"Variable pattern class. — variable_pattern-class","text":"Variable pattern class.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/write.html","id":null,"dir":"Reference","previous_headings":"","what":"Write generic object to files. — write","title":"Write generic object to files. — write","text":"Write generic object files.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write generic object to files. — write","text":"","code":"write(object, file, ...)  # S4 method for parameters,character write(object, file, ...)  # S4 method for code_records,character write(object, file, ...)  # S4 method for campsis_model,character write(object, file, ...)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write generic object to files. — write","text":"object generic object file path output file directory ... extra arguments","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write generic object to files. — write","text":"logical value, TRUE success, FALSE failure","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/writeParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Write subset of parameters (theta, omega or sigma). — writeParameters","title":"Write subset of parameters (theta, omega or sigma). — writeParameters","text":"Write subset parameters (theta, omega sigma).","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/writeParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write subset of parameters (theta, omega or sigma). — writeParameters","text":"","code":"writeParameters(object, file, ...)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/writeParameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write subset of parameters (theta, omega or sigma). — writeParameters","text":"object subset parameters file filename ... extra arguments, like defaultDf empty parameters list","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/writeParameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write subset of parameters (theta, omega or sigma). — writeParameters","text":"TRUE success","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/writeRecordDelimiter.html","id":null,"dir":"Reference","previous_headings":"","what":"Write record delimiter line. — writeRecordDelimiter","title":"Write record delimiter line. — writeRecordDelimiter","text":"Write record delimiter line.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/writeRecordDelimiter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write record delimiter line. — writeRecordDelimiter","text":"","code":"writeRecordDelimiter(object)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/writeRecordDelimiter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write record delimiter line. — writeRecordDelimiter","text":"object code record","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/writeRecordDelimiter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write record delimiter line. — writeRecordDelimiter","text":"record delimiter line","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/writeVarcov.html","id":null,"dir":"Reference","previous_headings":"","what":"Write variance-covariance matrix. — writeVarcov","title":"Write variance-covariance matrix. — writeVarcov","text":"Write variance-covariance matrix.","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/writeVarcov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write variance-covariance matrix. — writeVarcov","text":"","code":"writeVarcov(object, file)"},{"path":"https://calvagone.github.io/campsismod.doc/reference/writeVarcov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write variance-covariance matrix. — writeVarcov","text":"object matrix file filename","code":""},{"path":"https://calvagone.github.io/campsismod.doc/reference/writeVarcov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write variance-covariance matrix. — writeVarcov","text":"TRUE success","code":""},{"path":"https://calvagone.github.io/campsismod.doc/news/index.html","id":"campsismod-081","dir":"Changelog","previous_headings":"","what":"campsismod 0.8.1","title":"campsismod 0.8.1","text":"Harmonise simulation time RxODE mrgsolve #22 Easy insertion equations model specific position # 49","code":""},{"path":"https://calvagone.github.io/campsismod.doc/news/index.html","id":"campsismod-080","dir":"Changelog","previous_headings":"","what":"campsismod 0.8.0","title":"campsismod 0.8.0","text":"CRAN release: 2022-02-14 Added NEWS.md file track changes package. Initial release campsismod CRAN","code":""}]
